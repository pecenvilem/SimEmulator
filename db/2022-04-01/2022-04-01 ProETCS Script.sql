-- MySQL Script generated by MySQL Workbench
-- Fri Apr  1 11:08:07 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema InfraDB
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema InfraDB
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `InfraDB` DEFAULT CHARACTER SET utf8 COLLATE utf8_czech_ci ;
USE `InfraDB` ;

-- -----------------------------------------------------
-- Table `InfraDB`.`AssociatedFeature`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`AssociatedFeature` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_LLocFt×LAssFt`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`LocalizationFeature` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`AssociatedLocation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`AssociatedLocation` (
  `id` CHAR(36) NOT NULL,
  `associatedLocationType` VARCHAR(32) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_LEtLoc×LAsLoc`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`EntityLocation` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`AssociatedLocationEntity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`AssociatedLocationEntity` (
  `id_NetEntity` CHAR(36) NOT NULL,
  `id_AssociatedLocation` CHAR(36) NOT NULL,
  `lateralSide` INT NULL,
  `lateralDistance` DOUBLE NULL,
  `verticalSide` INT NULL,
  `verticalDistance` DOUBLE NULL,
  `functionalLocationReference` VARCHAR(32) NULL,
  `physicalLocationReference` VARCHAR(32) NULL,
  `applicationDirection` INT NULL,
  `locationPriority` INT NULL,
  PRIMARY KEY (`id_NetEntity`, `id_AssociatedLocation`),
  INDEX `SI÷id_ENetEt×LALcEt` (`id_NetEntity` ASC) VISIBLE,
  INDEX `SI÷id_LAsLoc×LALcEt` (`id_AssociatedLocation` ASC) VISIBLE,
  CONSTRAINT `FK÷id_ENetEt×LALcEt`
    FOREIGN KEY (`id_NetEntity`)
    REFERENCES `InfraDB`.`NetEntity` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_LAsLoc×LALcEt`
    FOREIGN KEY (`id_AssociatedLocation`)
    REFERENCES `InfraDB`.`AssociatedLocation` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`AssociatedLocationFeature`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`AssociatedLocationFeature` (
  `id_AssociatedLocation` CHAR(36) NOT NULL,
  `sequence` INT NOT NULL,
  `id_AssociatedFeature` CHAR(36) NOT NULL,
  `featureOrientation` INT NOT NULL,
  PRIMARY KEY (`id_AssociatedLocation`, `sequence`),
  INDEX `SI÷id_LAsLoc×LAsLFt` (`id_AssociatedLocation` ASC) VISIBLE,
  INDEX `SI÷id_LAssFt×LAsLFt` (`id_AssociatedFeature` ASC) VISIBLE,
  CONSTRAINT `FK÷id_LAsLoc×LAsLFt`
    FOREIGN KEY (`id_AssociatedLocation`)
    REFERENCES `InfraDB`.`AssociatedLocation` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_LAssFt×LAsLFt`
    FOREIGN KEY (`id_AssociatedFeature`)
    REFERENCES `InfraDB`.`AssociatedFeature` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`AssociatedPosition`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`AssociatedPosition` (
  `id` CHAR(36) NOT NULL,
  `id_PositioningNetElement` CHAR(36) NOT NULL,
  `intrinsicReference` DOUBLE NULL,
  `deltaPosition` DOUBLE NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  INDEX `SI÷id_TNetEl×PAssPt` (`id_PositioningNetElement` ASC) VISIBLE,
  CONSTRAINT `FK÷id_TPNtEl×LAssPs`
    FOREIGN KEY (`id_PositioningNetElement`)
    REFERENCES `InfraDB`.`PositioningNetElement` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_LAssFt×LAssPs`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`AssociatedFeature` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`AssociatedPositionAssignment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`AssociatedPositionAssignment` (
  `id_AssociatedPosition_A` CHAR(36) NOT NULL,
  `id_AssociatedPosition_B` CHAR(36) NOT NULL,
  PRIMARY KEY (`id_AssociatedPosition_A`, `id_AssociatedPosition_B`),
  INDEX `SI÷id_LAssPsA×LAsPsA` (`id_AssociatedPosition_A` ASC) VISIBLE,
  INDEX `SI÷id_LAssPsB×LAsPsA` (`id_AssociatedPosition_B` ASC) VISIBLE,
  CONSTRAINT `FK÷id_LAssPsA×LAsPsA`
    FOREIGN KEY (`id_AssociatedPosition_A`)
    REFERENCES `InfraDB`.`AssociatedPosition` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_LAssPsB×LAsPsA`
    FOREIGN KEY (`id_AssociatedPosition_B`)
    REFERENCES `InfraDB`.`AssociatedPosition` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`AssociatedSection`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`AssociatedSection` (
  `id` CHAR(36) NOT NULL,
  `id_AssociatedPosition_A` CHAR(36) NOT NULL,
  `id_AssociatedPosition_B` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `SI÷id_LAssPsB×LAssSc` (`id_AssociatedPosition_B` ASC) VISIBLE,
  INDEX `FK÷id_LAssPsA×LAssSc_idx` (`id_AssociatedPosition_A` ASC) VISIBLE,
  CONSTRAINT `FK÷id_LAssFt×LAssSc`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`AssociatedFeature` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_LAssPsA×LAssSc`
    FOREIGN KEY (`id_AssociatedPosition_A`)
    REFERENCES `InfraDB`.`AssociatedPosition` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_LAssPsB×LAssSc`
    FOREIGN KEY (`id_AssociatedPosition_B`)
    REFERENCES `InfraDB`.`AssociatedPosition` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`Balise`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`Balise` (
  `id` CHAR(36) NOT NULL,
  `baliseType` VARCHAR(32) NULL,
  `defaultTelegram` VARCHAR(256) NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_XCConE×XCBlse`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`ControlEntity` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`BaseObject`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`BaseObject` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`CircularArcHC`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CircularArcHC` (
  `id` CHAR(36) NOT NULL,
  `radius` DOUBLE NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_XGHorC×XGCAHC`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`HorizontalCurve` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`ClothoidHC`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`ClothoidHC` (
  `id` CHAR(36) NOT NULL,
  `radius0` DOUBLE NULL,
  `radius1` DOUBLE NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_XGHorC×XGClHC`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`HorizontalCurve` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`CompositionNetElement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CompositionNetElement` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_TNetEl×TCNtEl`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`NetElement` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`ConstantSuperelevation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`ConstantSuperelevation` (
  `id` CHAR(36) NOT NULL,
  `superelevation` DOUBLE NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_XGSuEl×XGCoSu`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`Superelevation` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`ControlEntity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`ControlEntity` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_XXMEnt×XCCtrl`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`ModularEntity` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`CubicParabolaHC`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CubicParabolaHC` (
  `id` CHAR(36) NOT NULL,
  `radius0` DOUBLE NULL,
  `radius1` DOUBLE NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_XGHorC×XGCPHC`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`HorizontalCurve` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`ElementPartCollection`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`ElementPartCollection` (
  `id` CHAR(36) NOT NULL,
  `id_CompositionNetElement` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `SI÷id_TCNtEl×TElPaC` (`id_CompositionNetElement` ASC) VISIBLE,
  CONSTRAINT `FK÷id_BBaObj×TElPaC`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`BaseObject` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_TCNtEl×TElPaC`
    FOREIGN KEY (`id_CompositionNetElement`)
    REFERENCES `InfraDB`.`CompositionNetElement` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`EntityLocation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`EntityLocation` (
  `id` CHAR(36) NOT NULL,
  `numberOfFeatures` INT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_NNtwRs×LEtLoc`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`NetworkResource` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`EntityOrientation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`EntityOrientation` (
  `id_NetEntity` CHAR(36) NOT NULL,
  `id_PositioningSystem` CHAR(36) NOT NULL,
  `deltaHorizontalRotation` DOUBLE NULL,
  `deltaVerticalRotation` DOUBLE NULL,
  PRIMARY KEY (`id_NetEntity`, `id_PositioningSystem`),
  INDEX `SI÷id_PPoSys×PEtOri` (`id_PositioningSystem` ASC) VISIBLE,
  INDEX `SI÷id_ENetEt×PEtOri` (`id_NetEntity` ASC) VISIBLE,
  CONSTRAINT `FK÷id_PPoSys×PEtOri`
    FOREIGN KEY (`id_PositioningSystem`)
    REFERENCES `InfraDB`.`PositioningSystem` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_ENetEt×PEtOri`
    FOREIGN KEY (`id_NetEntity`)
    REFERENCES `InfraDB`.`NetEntity` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`EntityType`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`EntityType` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_YGenTy×YEntTy`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`GeneralType` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`GeneralType`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`GeneralType` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_BNmRes×YGenTy`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`NamedResource` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`GeoFeature`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`GeoFeature` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_LLocFt×LGeoFt`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`LocalizationFeature` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`GeoLocation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`GeoLocation` (
  `id` CHAR(36) NOT NULL,
  `geoLocationType` VARCHAR(32) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_LEtLoc×LGeLoc`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`EntityLocation` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`GeoLocationEntity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`GeoLocationEntity` (
  `id_NetEntity` CHAR(36) NOT NULL,
  `id_GeoLocation` CHAR(36) NOT NULL,
  `bufferDistance` DOUBLE NULL,
  `height` DOUBLE NULL,
  PRIMARY KEY (`id_NetEntity`, `id_GeoLocation`),
  INDEX `SI÷id_LGeLoc×LGLcEt` (`id_GeoLocation` ASC) VISIBLE,
  INDEX `SI÷id_ENetEt×LGLcEt` (`id_NetEntity` ASC) VISIBLE,
  CONSTRAINT `FK÷id_ENetEt×LGLcEt`
    FOREIGN KEY (`id_NetEntity`)
    REFERENCES `InfraDB`.`NetEntity` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_LGeLoc×LGLcEt`
    FOREIGN KEY (`id_GeoLocation`)
    REFERENCES `InfraDB`.`GeoLocation` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`GeoLocationFeature`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`GeoLocationFeature` (
  `id_GeoLocation` CHAR(36) NOT NULL,
  `sequence` INT NOT NULL,
  `id_GeoFeature` CHAR(36) NOT NULL,
  PRIMARY KEY (`id_GeoLocation`, `sequence`),
  INDEX `SI÷id_LGeLoc×LGeLFt` (`id_GeoLocation` ASC) VISIBLE,
  INDEX `SI÷id_LGeoFt×LGeLFt` (`id_GeoFeature` ASC) VISIBLE,
  CONSTRAINT `FK÷id_LGeLoc×LGeLFt`
    FOREIGN KEY (`id_GeoLocation`)
    REFERENCES `InfraDB`.`GeoLocation` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_LGeoFt×LGeLFt`
    FOREIGN KEY (`id_GeoFeature`)
    REFERENCES `InfraDB`.`GeoFeature` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`GeoPoint`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`GeoPoint` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_LGeoFt×LGeoPt`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`GeoFeature` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`GeoPointAssociatedPosition`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`GeoPointAssociatedPosition` (
  `id_AssociatedPosition` CHAR(36) NOT NULL,
  `id_GeoPoint` CHAR(36) NOT NULL,
  INDEX `SI÷id_LAssPs×LGPAPs` (`id_AssociatedPosition` ASC) VISIBLE,
  PRIMARY KEY (`id_AssociatedPosition`, `id_GeoPoint`),
  INDEX `SI÷id_LGeoPt×LGPAPs` (`id_GeoPoint` ASC) VISIBLE,
  CONSTRAINT `FK÷id_LAssPs×LGPAPs`
    FOREIGN KEY (`id_AssociatedPosition`)
    REFERENCES `InfraDB`.`AssociatedPosition` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_LGeoPt×LGPAPs`
    FOREIGN KEY (`id_GeoPoint`)
    REFERENCES `InfraDB`.`GeoPoint` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`GeoPointGeoCoordinate`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`GeoPointGeoCoordinate` (
  `id_GeoPoint` CHAR(36) NOT NULL,
  `id_GeoPositioningSystem` CHAR(36) NOT NULL,
  `x` DOUBLE NULL,
  `y` DOUBLE NULL,
  `z` DOUBLE NULL,
  INDEX `SI÷id_PGeoPS×PGPGeC` (`id_GeoPositioningSystem` ASC) VISIBLE,
  PRIMARY KEY (`id_GeoPoint`, `id_GeoPositioningSystem`),
  INDEX `SI÷id_LGeoPt×PGPGeC` (`id_GeoPoint` ASC) VISIBLE,
  CONSTRAINT `FK÷id_PGeoPS×PGPGeC`
    FOREIGN KEY (`id_GeoPositioningSystem`)
    REFERENCES `InfraDB`.`GeoPositioningSystem` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_LGeoPt×PGPGeC`
    FOREIGN KEY (`id_GeoPoint`)
    REFERENCES `InfraDB`.`GeoPoint` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`GeoPointLinearCoordinate`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`GeoPointLinearCoordinate` (
  `id_GeoPoint` CHAR(36) NOT NULL,
  `id_LinearPositioningSystem` CHAR(36) NOT NULL,
  `measure` DOUBLE NULL,
  `lateralOffset` DOUBLE NULL,
  `verticalOffset` DOUBLE NULL,
  INDEX `SI÷id_PLinPS×PGPLiC` (`id_LinearPositioningSystem` ASC) VISIBLE,
  PRIMARY KEY (`id_GeoPoint`, `id_LinearPositioningSystem`),
  INDEX `SI÷id_LGeoPt×PGPLiC` (`id_GeoPoint` ASC) VISIBLE,
  CONSTRAINT `FK÷id_PLinPS×PGPLiC`
    FOREIGN KEY (`id_LinearPositioningSystem`)
    REFERENCES `InfraDB`.`LinearPositioningSystem` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_LGeoPt×PGPLiC`
    FOREIGN KEY (`id_GeoPoint`)
    REFERENCES `InfraDB`.`GeoPoint` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`GeoPolygonalChain`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`GeoPolygonalChain` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_LGeoFt×LGeoPC`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`GeoFeature` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`GeoPolygonalChainGeoPoint`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`GeoPolygonalChainGeoPoint` (
  `id_GeoPolygonalChain` CHAR(36) NOT NULL,
  `sequence` INT NOT NULL,
  `id_GeoPoint` CHAR(36) NOT NULL,
  PRIMARY KEY (`id_GeoPolygonalChain`, `sequence`),
  INDEX `SI÷id_LGeoPt×LGPCGP` (`id_GeoPoint` ASC) VISIBLE,
  INDEX `SI÷id_LGeoPC×LGPCGP` (`id_GeoPolygonalChain` ASC) VISIBLE,
  CONSTRAINT `FK÷id_LGeoPC×LGPCGP`
    FOREIGN KEY (`id_GeoPolygonalChain`)
    REFERENCES `InfraDB`.`GeoPolygonalChain` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_LGeoPt×LGPCGP`
    FOREIGN KEY (`id_GeoPoint`)
    REFERENCES `InfraDB`.`GeoPoint` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`GeoPositioningSystem`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`GeoPositioningSystem` (
  `id` CHAR(36) NOT NULL,
  `crsDefinition` VARCHAR(32) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_PPoSys×PGeoPS`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`PositioningSystem` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`GeometryEntity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`GeometryEntity` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_ENetEt×XGGeoE`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`NetEntity` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`HorizontalCurve`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`HorizontalCurve` (
  `id` CHAR(36) NOT NULL,
  `azimuth0` DOUBLE NULL,
  `deltaAzimuth` DOUBLE NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_XGGeoE×XGHorC`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`GeometryEntity` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`LevelNetwork`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`LevelNetwork` (
  `id` CHAR(36) NOT NULL,
  `descriptionLevel` VARCHAR(32) NOT NULL,
  `dimension` VARCHAR(4) NOT NULL,
  `representation` VARCHAR(32) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_BBaObj×NLevNw`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`BaseObject` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`LevelResourceAssignment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`LevelResourceAssignment` (
  `id_NetworkResource` CHAR(36) NOT NULL,
  `id_LevelNetwork` CHAR(36) NOT NULL,
  PRIMARY KEY (`id_NetworkResource`, `id_LevelNetwork`),
  INDEX `SI÷id_NNtwRs×NLvRsA` (`id_NetworkResource` ASC) VISIBLE,
  INDEX `SI÷id_NLevNw×NLvRsA` (`id_LevelNetwork` ASC) VISIBLE,
  CONSTRAINT `FK÷id_NLevNw×NLvRsA`
    FOREIGN KEY (`id_LevelNetwork`)
    REFERENCES `InfraDB`.`LevelNetwork` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_NNtwRs×NLvRsA`
    FOREIGN KEY (`id_NetworkResource`)
    REFERENCES `InfraDB`.`NetworkResource` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`LinearAnchorPoint`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`LinearAnchorPoint` (
  `id` CHAR(36) NOT NULL,
  `id_LinearPositioningSystem` CHAR(36) NOT NULL,
  `anchorName` VARCHAR(128) NULL,
  `measure` DOUBLE NOT NULL,
  `id_LinearAnchorPoint_Next` CHAR(36) NULL,
  `measureToNext` DOUBLE NULL,
  PRIMARY KEY (`id`),
  INDEX `SI÷id_PLinPS×PLinAP` (`id_LinearPositioningSystem` ASC) VISIBLE,
  INDEX `SI÷id_PLinAPNext×PLinAP` (`id_LinearAnchorPoint_Next` ASC) VISIBLE,
  CONSTRAINT `FK÷id_BBaObj×PLinAP`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`BaseObject` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_PLinPS×PLinAP`
    FOREIGN KEY (`id_LinearPositioningSystem`)
    REFERENCES `InfraDB`.`LinearPositioningSystem` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_PLinAPNext×PLinAP`
    FOREIGN KEY (`id_LinearAnchorPoint_Next`)
    REFERENCES `InfraDB`.`LinearAnchorPoint` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`LinearElement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`LinearElement` (
  `id` CHAR(36) NOT NULL,
  `length` DOUBLE NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_TPNtEl×TLinEl`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`PositioningNetElement` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`LinearPositioningSystem`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`LinearPositioningSystem` (
  `id` CHAR(36) NOT NULL,
  `linearReferencingMethod` VARCHAR(32) NULL,
  `startMeasure` DOUBLE NULL,
  `endMeasure` DOUBLE NULL,
  `units` VARCHAR(32) NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_PPoSys×PLinPS`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`PositioningSystem` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`LinearSuperelevationRamp`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`LinearSuperelevationRamp` (
  `id` CHAR(36) NOT NULL,
  `superelevation0` DOUBLE NULL,
  `superelevation1` DOUBLE NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_XGSuEl×XGLiSR`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`Superelevation` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`LocalizationFeature`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`LocalizationFeature` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_BNmRes×LLocFt`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`NamedResource` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`ModularEntity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`ModularEntity` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_ENetEt×XXMEnt`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`NetEntity` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`ModularEntityType`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`ModularEntityType` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_YEntTy×XYMEtT`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`EntityType` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`NamedResource`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`NamedResource` (
  `id` CHAR(36) NOT NULL,
  `name` VARCHAR(64) NULL,
  `longname` VARCHAR(128) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `UI÷name×BNmRes` (`name` ASC) VISIBLE,
  CONSTRAINT `FK÷id_BBaObj×BNmRes`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`BaseObject` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`NetElement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`NetElement` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_NNtwRs×TNetEl`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`NetworkResource` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`NetEntity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`NetEntity` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_NNtwRs×ENetEt`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`NetworkResource` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`NetEntityRelation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`NetEntityRelation` (
  `id` CHAR(36) NOT NULL,
  `id_NetEntity_A` CHAR(36) NOT NULL,
  `id_NetEntity_B` CHAR(36) NOT NULL,
  `relationType` VARCHAR(32) NULL,
  PRIMARY KEY (`id`),
  INDEX `SI÷id_ENetEtA×ENtEtA` (`id_NetEntity_A` ASC) VISIBLE,
  INDEX `FK÷id_ENetEtB×ENtEtA_idx` (`id_NetEntity_B` ASC) VISIBLE,
  CONSTRAINT `FK÷id_ENetEtA×ENtEtA`
    FOREIGN KEY (`id_NetEntity_A`)
    REFERENCES `InfraDB`.`NetEntity` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_ENetEtB×ENtEtA`
    FOREIGN KEY (`id_NetEntity_B`)
    REFERENCES `InfraDB`.`NetEntity` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_BBaObj×ENtEtR`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`BaseObject` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`Network`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`Network` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_BNmRes×NNetwk`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`NamedResource` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`NetworkLevelAssignment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`NetworkLevelAssignment` (
  `id_LevelNetwork` CHAR(36) NOT NULL,
  `id_Network` CHAR(36) NOT NULL,
  PRIMARY KEY (`id_LevelNetwork`, `id_Network`),
  INDEX `SI÷id_NNetwk×NNwLvA` (`id_Network` ASC) VISIBLE,
  INDEX `SI÷id_NLevNw×NNwLvA` (`id_LevelNetwork` ASC) VISIBLE,
  CONSTRAINT `FK÷id_NLevNw×NLvNwA`
    FOREIGN KEY (`id_LevelNetwork`)
    REFERENCES `InfraDB`.`LevelNetwork` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_NNetwk×NLvNwA`
    FOREIGN KEY (`id_Network`)
    REFERENCES `InfraDB`.`Network` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`NetworkResource`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`NetworkResource` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_BNmRes×NNtwRs`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`NamedResource` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`NetworkResourceAssignment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`NetworkResourceAssignment` (
  `id_NetworkResource` CHAR(36) NOT NULL,
  `id_Network` CHAR(36) NOT NULL,
  PRIMARY KEY (`id_NetworkResource`, `id_Network`),
  INDEX `SI÷id_NNetwk×NNwRsA` (`id_Network` ASC) VISIBLE,
  INDEX `SI÷id_NNtwRs×NNwRsA` (`id_NetworkResource` ASC) VISIBLE,
  CONSTRAINT `FK÷id_NNetwk×NNwRsA`
    FOREIGN KEY (`id_Network`)
    REFERENCES `InfraDB`.`Network` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_NNtwRs×NNwRsA`
    FOREIGN KEY (`id_NetworkResource`)
    REFERENCES `InfraDB`.`NetworkResource` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`NonLinearElement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`NonLinearElement` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_TPNtEl×TNoLEl`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`PositioningNetElement` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`OperationalEntity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`OperationalEntity` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_XXMEnt×XOOpeE`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`ModularEntity` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`OrderedCollection`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`OrderedCollection` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_TElPaC×TOrCol`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`ElementPartCollection` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`OrderedCollectionElement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`OrderedCollectionElement` (
  `id_OrderedCollection` CHAR(36) NOT NULL,
  `sequence` INT UNSIGNED NOT NULL,
  `id_NetElement` CHAR(36) NOT NULL,
  PRIMARY KEY (`id_OrderedCollection`, `sequence`),
  INDEX `SI÷id_TOrCol×TOColE` (`id_OrderedCollection` ASC) VISIBLE,
  INDEX `SI÷id_TNetEl×TOColE` (`id_NetElement` ASC) VISIBLE,
  CONSTRAINT `FK÷id_TNetEl×TOColE`
    FOREIGN KEY (`id_NetElement`)
    REFERENCES `InfraDB`.`NetElement` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_TOrCol×TOColE`
    FOREIGN KEY (`id_OrderedCollection`)
    REFERENCES `InfraDB`.`OrderedCollection` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`ParabolaVC`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`ParabolaVC` (
  `id` CHAR(36) NOT NULL,
  `parabolaVertexRadius` DOUBLE NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_XGVerC×XGPbVC`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`VerticalCurve` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`PositionedRelation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`PositionedRelation` (
  `id` CHAR(36) NOT NULL,
  `id_PositioningNetElement_A` CHAR(36) NOT NULL,
  `id_PositioningNetElement_B` CHAR(36) NOT NULL,
  `positionOnA` CHAR(1) NOT NULL,
  `positionOnB` CHAR(1) NOT NULL,
  `navigability` VARCHAR(32) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `SI÷id_TPNtElB×TPosRt` (`id_PositioningNetElement_B` ASC) VISIBLE,
  INDEX `FK÷id_TPNtElA×TPosRt_idx` (`id_PositioningNetElement_A` ASC) VISIBLE,
  CONSTRAINT `FK÷id_TRelat×TPosRt`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`Relation` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_TPNtElA×TPosRt`
    FOREIGN KEY (`id_PositioningNetElement_A`)
    REFERENCES `InfraDB`.`PositioningNetElement` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_TPNtElB×TPosRt`
    FOREIGN KEY (`id_PositioningNetElement_B`)
    REFERENCES `InfraDB`.`PositioningNetElement` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`PositioningNetElement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`PositioningNetElement` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_TCNtEl×TPNtEl`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`CompositionNetElement` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`PositioningSystem`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`PositioningSystem` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_BNmRes×PPoSys`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`NamedResource` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`PositioningSystemNetElement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`PositioningSystemNetElement` (
  `id_PositioningNetElement` CHAR(36) NOT NULL,
  `id_PositioningSystem` CHAR(36) NOT NULL,
  `elementRoleWithinBase` INT NULL,
  INDEX `SI÷id_PPoSys×PPSNEl` (`id_PositioningSystem` ASC) VISIBLE,
  INDEX `SI÷id_TPNtEl×PPSNEl` (`id_PositioningNetElement` ASC) VISIBLE,
  PRIMARY KEY (`id_PositioningNetElement`, `id_PositioningSystem`),
  CONSTRAINT `FK÷id_TPNtEl×PPSNEl`
    FOREIGN KEY (`id_PositioningNetElement`)
    REFERENCES `InfraDB`.`PositioningNetElement` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_PPoSys×PPSNEl`
    FOREIGN KEY (`id_PositioningSystem`)
    REFERENCES `InfraDB`.`PositioningSystem` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`Relation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`Relation` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_NNtwRs×TRelat`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`NetworkResource` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`SignalType`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`SignalType` (
  `id` CHAR(36) NOT NULL,
  `signalCategory` VARCHAR(32) NULL,
  `signalConstructionType` VARCHAR(32) NULL,
  `defaultIndication` VARCHAR(32) NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_XYMEtT×XYSigT`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`ModularEntityType` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`SpeedSection`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`SpeedSection` (
  `id` CHAR(36) NOT NULL,
  `defaultMaximalSpeed` DOUBLE NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_XOOpeE×XOStPl0`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`OperationalEntity` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`StraightHC`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`StraightHC` (
  `id` CHAR(36) NOT NULL,
  `horizontalLength` DOUBLE NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_XGHorC×XGStHC`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`HorizontalCurve` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`StraightVC`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`StraightVC` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_XGVerC×XGStVC`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`VerticalCurve` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`Superelevation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`Superelevation` (
  `id` CHAR(36) NOT NULL,
  `anchoredAxisReference` INT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_XGGeoE×XGSuEl`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`GeometryEntity` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`TracksideSignal`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`TracksideSignal` (
  `id` CHAR(36) NOT NULL,
  `id_SignalType` CHAR(36) NULL,
  PRIMARY KEY (`id`),
  INDEX `SI÷id_XYSigT×XCTSig` (`id_SignalType` ASC) VISIBLE,
  CONSTRAINT `FK÷id_XCConE×XCTSig`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`ControlEntity` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_XYSigT×XCTSig`
    FOREIGN KEY (`id_SignalType`)
    REFERENCES `InfraDB`.`SignalType` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`UnorderedCollection`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`UnorderedCollection` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_TElPaC×TUoCol`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`ElementPartCollection` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`UnorderedCollectionElement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`UnorderedCollectionElement` (
  `id_NetElement` CHAR(36) NOT NULL,
  `id_UnorderedCollection` CHAR(36) NOT NULL,
  PRIMARY KEY (`id_NetElement`, `id_UnorderedCollection`),
  INDEX `SI÷id_TUoCol×TUColE` (`id_UnorderedCollection` ASC) VISIBLE,
  INDEX `SI÷id_TNetEl×TUColE` (`id_NetElement` ASC) VISIBLE,
  CONSTRAINT `FK÷id_TNetEl×TUColE`
    FOREIGN KEY (`id_NetElement`)
    REFERENCES `InfraDB`.`NetElement` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_TUoCol×TUColE`
    FOREIGN KEY (`id_UnorderedCollection`)
    REFERENCES `InfraDB`.`UnorderedCollection` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`VerticalCurve`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`VerticalCurve` (
  `id` CHAR(36) NOT NULL,
  `horizontalLength` DOUBLE NULL,
  `elevation0` DOUBLE NULL,
  `deltaElevation` DOUBLE NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_XGGeoE×XGVerC`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`GeometryEntity` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

USE `InfraDB` ;

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_LinearElement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_LinearElement` (`id` INT, `length` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_AssociatedPosition`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_AssociatedPosition` (`id` INT, `id_PositioningNetElement` INT, `intrinsicReference` INT, `deltaPosition` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_BaseObject`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_BaseObject` (`id` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_NamedResource`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_NamedResource` (`id` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_NetworkResource`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_NetworkResource` (`id` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_LevelResourceAssignment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_LevelResourceAssignment` (`id_NetworkResource` INT, `id_LevelNetwork` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_NetworkLevelAssignment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_NetworkLevelAssignment` (`id_LevelNetwork` INT, `id_Network` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_NetworkResourceAssignment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_NetworkResourceAssignment` (`id_NetworkResource` INT, `id_Network` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_Network`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_Network` (`id` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_LevelNetwork`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_LevelNetwork` (`id` INT, `descriptionLevel` INT, `dimension` INT, `representation` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_NetElement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_NetElement` (`id` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_Relation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_Relation` (`id` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_PositionedRelation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_PositionedRelation` (`id` INT, `id_PositioningNetElement_A` INT, `id_PositioningNetElement_B` INT, `positionOnA` INT, `positionOnB` INT, `navigability` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_CompositionNetElement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_CompositionNetElement` (`id` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_PositioningNetElement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_PositioningNetElement` (`id` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_NonLinearElement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_NonLinearElement` (`id` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_ElementPartCollection`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_ElementPartCollection` (`id` INT, `id_CompositionNetElement` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_UnorderedCollection`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_UnorderedCollection` (`id` INT, `id_CompositionNetElement` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_OrderedCollectionElement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_OrderedCollectionElement` (`id_OrderedCollection` INT, `sequence` INT, `id_NetElement` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_UnorderedCollectionElement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_UnorderedCollectionElement` (`id_NetElement` INT, `id_UnorderedCollection` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_OrderedCollection`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_OrderedCollection` (`id` INT, `id_CompositionNetElement` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_GeoPositioningSystem`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_GeoPositioningSystem` (`id` INT, `crsDefinition` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_LinearPositioningSystem`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_LinearPositioningSystem` (`id` INT, `linearReferencingMethod` INT, `startMeasure` INT, `endMeasure` INT, `units` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_PositioningSystem`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_PositioningSystem` (`id` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_LinearAnchorPoint`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_LinearAnchorPoint` (`id` INT, `id_LinearPositioningSystem` INT, `anchorName` INT, `measure` INT, `id_LinearAnchorPoint_Next` INT, `measureToNext` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_GeoPointLinearCoordinate`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_GeoPointLinearCoordinate` (`id_GeoPoint` INT, `id_LinearPositioningSystem` INT, `measure` INT, `lateralOffset` INT, `verticalOffset` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_GeoPointGeoCoordinate`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_GeoPointGeoCoordinate` (`id_GeoPoint` INT, `id_GeoPositioningSystem` INT, `x` INT, `y` INT, `z` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_GeoLocationFeature`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_GeoLocationFeature` (`id_GeoLocation` INT, `sequence` INT, `id_GeoFeature` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_EntityOrientation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_EntityOrientation` (`id_NetEntity` INT, `id_PositioningSystem` INT, `deltaHorizontalRotation` INT, `deltaVerticalRotation` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_AssociatedSection`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_AssociatedSection` (`id` INT, `id_AssociatedPosition_A` INT, `id_AssociatedPosition_B` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_AssociatedFeature`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_AssociatedFeature` (`id` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_PositioningSystemNetElement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_PositioningSystemNetElement` (`id_PositioningNetElement` INT, `id_PositioningSystem` INT, `elementRoleWithinBase` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_AssociatedLocationFeature`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_AssociatedLocationFeature` (`id_AssociatedLocation` INT, `sequence` INT, `id_AssociatedFeature` INT, `featureOrientation` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_AssociatedLocation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_AssociatedLocation` (`id` INT, `associatedLocationType` INT, `numberOfFeatures` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_GeoLocation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_GeoLocation` (`id` INT, `geoLocationType` INT, `numberOfFeatures` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_EntityLocation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_EntityLocation` (`id` INT, `numberOfFeatures` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_NetEntity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_NetEntity` (`id` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_GeneralType`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_GeneralType` (`id` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_EntityType`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_EntityType` (`id` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_ModularEntityType`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_ModularEntityType` (`id` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_SignalType`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_SignalType` (`id` INT, `signalCategory` INT, `signalConstructionType` INT, `defaultIndication` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_ModularEntity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_ModularEntity` (`id` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_Balise`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_Balise` (`id` INT, `baliseType` INT, `defaultTelegram` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_OperationalEntity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_OperationalEntity` (`id` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_SpeedSection`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_SpeedSection` (`id` INT, `defaultMaximalSpeed` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_ControlEntity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_ControlEntity` (`id` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_TracksideSignal`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_TracksideSignal` (`id` INT, `id_SignalType` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_GeometryEntity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_GeometryEntity` (`id` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_HorizontalCurve`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_HorizontalCurve` (`id` INT, `azimuth0` INT, `deltaAzimuth` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_VerticalCurve`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_VerticalCurve` (`id` INT, `horizontalLength` INT, `elevation0` INT, `deltaElevation` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_StraightHC`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_StraightHC` (`id` INT, `horizontalLength` INT, `azimuth0` INT, `deltaAzimuth` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_CircularArcHC`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_CircularArcHC` (`id` INT, `radius` INT, `azimuth0` INT, `deltaAzimuth` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_CubicParabolaHC`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_CubicParabolaHC` (`id` INT, `radius0` INT, `radius1` INT, `azimuth0` INT, `deltaAzimuth` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_ClothoidHC`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_ClothoidHC` (`id` INT, `radius0` INT, `radius1` INT, `azimuth0` INT, `deltaAzimuth` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_StraightVC`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_StraightVC` (`id` INT, `horizontalLength` INT, `elevation0` INT, `deltaElevation` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_ParabolaVC`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_ParabolaVC` (`id` INT, `parabolaVertexRadius` INT, `horizontalLength` INT, `elevation0` INT, `deltaElevation` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_Superelevation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_Superelevation` (`id` INT, `anchoredAxisReference` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_ConstantSuperelevation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_ConstantSuperelevation` (`id` INT, `superelevation` INT, `anchoredAxisReference` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_LinearSuperelevationRamp`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_LinearSuperelevationRamp` (`id` INT, `superelevation` INT, `anchoredAxisReference` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_GeoPoint`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_GeoPoint` (`id` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_GeoFeature`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_GeoFeature` (`id` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_GeoPolygonalChain`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_GeoPolygonalChain` (`id` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_GeoPolygonalChainGeoPoint`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_GeoPolygonalChainGeoPoint` (`id_GeoPolygonalChain` INT, `sequence` INT, `id_GeoPoint` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_AssociatedPositionAssignment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_AssociatedPositionAssignment` (`id_AssociatedPosition_A` INT, `id_AssociatedPosition_B` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_LocalizationFeature`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_LocalizationFeature` (`id` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_AssociatedLocationEntity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_AssociatedLocationEntity` (`id_NetEntity` INT, `id_AssociatedLocation` INT, `lateralSide` INT, `lateralDistance` INT, `verticalSide` INT, `verticalDistance` INT, `functionalLocationReference` INT, `physicalLocationReference` INT, `applicationDirection` INT, `locationPriority` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_GeoPointAssociatedPosition`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_GeoPointAssociatedPosition` (`id_AssociatedPosition` INT, `id_GeoPoint` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_GeoLocationEntity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_GeoLocationEntity` (`id_NetEntity` INT, `id_GeoLocation` INT, `bufferDistance` INT, `height` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_NetEntityRelation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_NetEntityRelation` (`id` INT, `id_NetEntity_A` INT, `id_NetEntity_B` INT, `relationType` INT);

-- -----------------------------------------------------
-- View `InfraDB`.`CV_LinearElement`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_LinearElement`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_LinearElement` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetElement
NATURAL JOIN CompositionNetElement
NATURAL JOIN PositioningNetElement
NATURAL JOIN LinearElement;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_AssociatedPosition`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_AssociatedPosition`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_AssociatedPosition` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN LocalizationFeature
NATURAL JOIN AssociatedFeature
NATURAL JOIN AssociatedPosition;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_BaseObject`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_BaseObject`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_BaseObject` AS
SELECT * FROM BaseObject;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_NamedResource`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_NamedResource`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_NamedResource` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_NetworkResource`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_NetworkResource`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_NetworkResource` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_LevelResourceAssignment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_LevelResourceAssignment`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_LevelResourceAssignment` AS
SELECT * FROM LevelResourceAssignment;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_NetworkLevelAssignment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_NetworkLevelAssignment`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_NetworkLevelAssignment` AS
SELECT * FROM NetworkLevelAssignment;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_NetworkResourceAssignment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_NetworkResourceAssignment`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_NetworkResourceAssignment` AS
SELECT * FROM NetworkResourceAssignment;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_Network`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_Network`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_Network` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN Network;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_LevelNetwork`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_LevelNetwork`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_LevelNetwork` AS
SELECT * FROM BaseObject
NATURAL JOIN LevelNetwork;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_NetElement`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_NetElement`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_NetElement` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetElement;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_Relation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_Relation`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_Relation` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN Relation;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_PositionedRelation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_PositionedRelation`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_PositionedRelation` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN Relation
NATURAL JOIN PositionedRelation;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_CompositionNetElement`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_CompositionNetElement`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_CompositionNetElement` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetElement
NATURAL JOIN CompositionNetElement;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_PositioningNetElement`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_PositioningNetElement`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_PositioningNetElement` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetElement
NATURAL JOIN CompositionNetElement
NATURAL JOIN PositioningNetElement;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_NonLinearElement`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_NonLinearElement`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_NonLinearElement` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetElement
NATURAL JOIN CompositionNetElement
NATURAL JOIN PositioningNetElement
NATURAL JOIN NonLinearElement;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_ElementPartCollection`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_ElementPartCollection`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_ElementPartCollection` AS
SELECT * FROM BaseObject
NATURAL JOIN ElementPartCollection;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_UnorderedCollection`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_UnorderedCollection`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_UnorderedCollection` AS
SELECT * FROM BaseObject
NATURAL JOIN ElementPartCollection
NATURAL JOIN UnorderedCollection;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_OrderedCollectionElement`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_OrderedCollectionElement`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_OrderedCollectionElement` AS
SELECT * FROM OrderedCollectionElement;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_UnorderedCollectionElement`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_UnorderedCollectionElement`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_UnorderedCollectionElement` AS
SELECT * FROM UnorderedCollectionElement;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_OrderedCollection`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_OrderedCollection`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_OrderedCollection` AS
SELECT * FROM BaseObject
NATURAL JOIN ElementPartCollection
NATURAL JOIN OrderedCollection;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_GeoPositioningSystem`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_GeoPositioningSystem`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_GeoPositioningSystem` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN PositioningSystem
NATURAL JOIN GeoPositioningSystem;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_LinearPositioningSystem`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_LinearPositioningSystem`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_LinearPositioningSystem` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN PositioningSystem
NATURAL JOIN LinearPositioningSystem;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_PositioningSystem`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_PositioningSystem`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_PositioningSystem` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN PositioningSystem;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_LinearAnchorPoint`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_LinearAnchorPoint`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_LinearAnchorPoint` AS
SELECT * FROM BaseObject
NATURAL JOIN LinearAnchorPoint;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_GeoPointLinearCoordinate`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_GeoPointLinearCoordinate`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_GeoPointLinearCoordinate` AS
SELECT * FROM GeoPointLinearCoordinate;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_GeoPointGeoCoordinate`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_GeoPointGeoCoordinate`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_GeoPointGeoCoordinate` AS
SELECT * FROM GeoPointGeoCoordinate;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_GeoLocationFeature`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_GeoLocationFeature`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_GeoLocationFeature` AS
SELECT * FROM GeoLocationFeature;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_EntityOrientation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_EntityOrientation`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_EntityOrientation` AS
SELECT * FROM EntityOrientation;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_AssociatedSection`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_AssociatedSection`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_AssociatedSection` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN LocalizationFeature
NATURAL JOIN AssociatedFeature
NATURAL JOIN AssociatedSection;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_AssociatedFeature`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_AssociatedFeature`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_AssociatedFeature` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN LocalizationFeature
NATURAL JOIN AssociatedFeature;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_PositioningSystemNetElement`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_PositioningSystemNetElement`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_PositioningSystemNetElement` AS
SELECT * FROM PositioningSystemNetElement;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_AssociatedLocationFeature`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_AssociatedLocationFeature`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_AssociatedLocationFeature` AS
SELECT * FROM AssociatedLocationFeature;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_AssociatedLocation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_AssociatedLocation`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_AssociatedLocation` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN EntityLocation
NATURAL JOIN AssociatedLocation;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_GeoLocation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_GeoLocation`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_GeoLocation` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN EntityLocation
NATURAL JOIN GeoLocation;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_EntityLocation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_EntityLocation`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_EntityLocation` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN EntityLocation;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_NetEntity`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_NetEntity`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_NetEntity` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_GeneralType`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_GeneralType`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_GeneralType` AS
SELECT * FROM BaseObject
NATURAL JOIN GeneralType;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_EntityType`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_EntityType`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_EntityType` AS
SELECT * FROM BaseObject
NATURAL JOIN GeneralType
NATURAL JOIN EntityType;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_ModularEntityType`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_ModularEntityType`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_ModularEntityType` AS
SELECT * FROM BaseObject
NATURAL JOIN GeneralType
NATURAL JOIN EntityType
NATURAL JOIN ModularEntityType;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_SignalType`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_SignalType`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_SignalType` AS
SELECT * FROM BaseObject
NATURAL JOIN GeneralType
NATURAL JOIN EntityType
NATURAL JOIN ModularEntityType
NATURAL JOIN SignalType;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_ModularEntity`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_ModularEntity`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_ModularEntity` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN ModularEntity;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_Balise`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_Balise`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_Balise` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN ModularEntity
NATURAL JOIN ControlEntity
NATURAL JOIN Balise;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_OperationalEntity`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_OperationalEntity`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_OperationalEntity` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN ModularEntity
NATURAL JOIN OperationalEntity;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_SpeedSection`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_SpeedSection`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_SpeedSection` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN ModularEntity
NATURAL JOIN OperationalEntity
NATURAL JOIN SpeedSection;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_ControlEntity`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_ControlEntity`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_ControlEntity` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN ModularEntity
NATURAL JOIN ControlEntity;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_TracksideSignal`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_TracksideSignal`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_TracksideSignal` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN ModularEntity
NATURAL JOIN ControlEntity
NATURAL JOIN TracksideSignal;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_GeometryEntity`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_GeometryEntity`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_GeometryEntity` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN GeometryEntity;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_HorizontalCurve`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_HorizontalCurve`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_HorizontalCurve` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN GeometryEntity
NATURAL JOIN HorizontalCurve;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_VerticalCurve`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_VerticalCurve`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_VerticalCurve` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN GeometryEntity
NATURAL JOIN VerticalCurve;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_StraightHC`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_StraightHC`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_StraightHC` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN GeometryEntity
NATURAL JOIN HorizontalCurve
NATURAL JOIN StraightHC;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_CircularArcHC`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_CircularArcHC`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_CircularArcHC` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN GeometryEntity
NATURAL JOIN HorizontalCurve
NATURAL JOIN CircularArcHC;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_CubicParabolaHC`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_CubicParabolaHC`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_CubicParabolaHC` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN GeometryEntity
NATURAL JOIN HorizontalCurve
NATURAL JOIN CubicParabolaHC;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_ClothoidHC`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_ClothoidHC`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_ClothoidHC` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN GeometryEntity
NATURAL JOIN HorizontalCurve
NATURAL JOIN ClothoidHC;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_StraightVC`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_StraightVC`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_StraightVC` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN GeometryEntity
NATURAL JOIN VerticalCurve
NATURAL JOIN StraightVC;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_ParabolaVC`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_ParabolaVC`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_ParabolaVC` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN GeometryEntity
NATURAL JOIN VerticalCurve
NATURAL JOIN ParabolaVC;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_Superelevation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_Superelevation`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_Superelevation` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN GeometryEntity
NATURAL JOIN Superelevation;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_ConstantSuperelevation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_ConstantSuperelevation`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_ConstantSuperelevation` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN GeometryEntity
NATURAL JOIN Superelevation
NATURAL JOIN ConstantSuperelevation;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_LinearSuperelevationRamp`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_LinearSuperelevationRamp`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_LinearSuperelevationRamp` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN GeometryEntity
NATURAL JOIN Superelevation
NATURAL JOIN ConstantSuperelevation;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_GeoPoint`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_GeoPoint`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_GeoPoint` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN LocalizationFeature
NATURAL JOIN GeoFeature
NATURAL JOIN GeoPoint;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_GeoFeature`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_GeoFeature`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_GeoFeature` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN LocalizationFeature
NATURAL JOIN GeoFeature;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_GeoPolygonalChain`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_GeoPolygonalChain`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_GeoPolygonalChain` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN LocalizationFeature
NATURAL JOIN GeoFeature
NATURAL JOIN GeoPolygonalChain;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_GeoPolygonalChainGeoPoint`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_GeoPolygonalChainGeoPoint`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_GeoPolygonalChainGeoPoint` AS
SELECT * FROM GeoPolygonalChainGeoPoint;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_AssociatedPositionAssignment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_AssociatedPositionAssignment`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_AssociatedPositionAssignment` AS
SELECT * FROM AssociatedPositionAssignment;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_LocalizationFeature`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_LocalizationFeature`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_LocalizationFeature` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN LocalizationFeature;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_AssociatedLocationEntity`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_AssociatedLocationEntity`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_AssociatedLocationEntity` AS
SELECT * FROM AssociatedLocationEntity;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_GeoPointAssociatedPosition`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_GeoPointAssociatedPosition`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_GeoPointAssociatedPosition` AS
SELECT * FROM GeoPointAssociatedPosition;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_GeoLocationEntity`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_GeoLocationEntity`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_GeoLocationEntity` AS
SELECT * FROM GeoLocationEntity;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_NetEntityRelation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_NetEntityRelation`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_NetEntityRelation` AS
SELECT * FROM NetEntityRelation;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
