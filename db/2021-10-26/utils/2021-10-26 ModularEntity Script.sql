-- MySQL Script generated by MySQL Workbench
-- Tue Oct 26 15:54:32 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema InfraDB
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema InfraDB
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `InfraDB` DEFAULT CHARACTER SET utf8 COLLATE utf8_czech_ci ;
USE `InfraDB` ;

-- -----------------------------------------------------
-- Table `InfraDB`.`AssociatedFeature`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`AssociatedFeature` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_LLocFt×LAssFt`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`LocalizationFeature` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`AssociatedLocation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`AssociatedLocation` (
  `id` CHAR(36) NOT NULL,
  `associatedLocationType` VARCHAR(32) NOT NULL,
  `applicationDirection` VARCHAR(32) NOT NULL,
  `lateralSide` CHAR(2) NULL,
  `lateralDistance` DOUBLE NULL,
  `verticalSide` CHAR(2) NULL,
  `verticalDistance` DOUBLE NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_LEtLoc×LAsLoc`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`EntityLocation` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`AssociatedLocationFeature`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`AssociatedLocationFeature` (
  `id_AssociatedFeature` CHAR(36) NOT NULL,
  `id_AssociatedLocation` CHAR(36) NOT NULL,
  `sequence` INT NOT NULL,
  `keepsOrientation` CHAR(1) NOT NULL,
  PRIMARY KEY (`id_AssociatedFeature`, `id_AssociatedLocation`, `sequence`),
  INDEX `SI÷id_LAsLoc×LAsLFt` (`id_AssociatedLocation` ASC),
  INDEX `SI÷id_LAssFt×LAsLFt` (`id_AssociatedFeature` ASC) ,
  CONSTRAINT `FK÷id_LAsLoc×LAsLFt`
    FOREIGN KEY (`id_AssociatedLocation`)
    REFERENCES `InfraDB`.`AssociatedLocation` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_LAssFt×LAsLFt`
    FOREIGN KEY (`id_AssociatedFeature`)
    REFERENCES `InfraDB`.`AssociatedFeature` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`AssociatedPosition`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`AssociatedPosition` (
  `id` CHAR(36) NOT NULL,
  `id_PositioningNetElement` CHAR(36) NOT NULL,
  `intrinsicReference` DOUBLE NULL,
  `deltaPosition` DOUBLE NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  INDEX `SI÷id_TNetEl×PAssPt` (`id_PositioningNetElement` ASC) ,
  CONSTRAINT `FK÷id_TPNtEl×LAssPs`
    FOREIGN KEY (`id_PositioningNetElement`)
    REFERENCES `InfraDB`.`PositioningNetElement` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_LAssFt×LAssPs`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`AssociatedFeature` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`AssociatedPositioningSystem`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`AssociatedPositioningSystem` (
  `id` CHAR(36) NOT NULL,
  `id_PositioningNetElement` CHAR(36) NOT NULL,
  `id_PositioningSystem` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `SI÷id_PPoSys×PAssPS` (`id_PositioningSystem` ASC) ,
  INDEX `SI÷id_TPNtEl×PAssPS` (`id_PositioningNetElement` ASC) ,
  CONSTRAINT `FK÷id_BBaObj×PAssPS`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`BaseObject` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_TPNtEl×PAssPS`
    FOREIGN KEY (`id_PositioningNetElement`)
    REFERENCES `InfraDB`.`PositioningNetElement` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_PPoSys×PAssPS`
    FOREIGN KEY (`id_PositioningSystem`)
    REFERENCES `InfraDB`.`PositioningSystem` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`AssociatedSection`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`AssociatedSection` (
  `id` CHAR(36) NOT NULL,
  `id_AssociatedPosition_A` CHAR(36) NOT NULL,
  `id_AssociatedPosition_B` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `SI÷id_LAssPsA×LAssSc` (`id_AssociatedPosition_A` ASC) ,
  INDEX `SI÷id_LAssPsB×LAssSc` (`id_AssociatedPosition_B` ASC) ,
  CONSTRAINT `FK÷id_LAssFt×LAssSc`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`AssociatedFeature` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_LAssPsA×LAssSc`
    FOREIGN KEY (`id_AssociatedPosition_A`)
    REFERENCES `InfraDB`.`AssociatedPosition` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_LAssPsB×LAssSc`
    FOREIGN KEY (`id_AssociatedPosition_B`)
    REFERENCES `InfraDB`.`AssociatedPosition` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`AssociatedSignalType`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`AssociatedSignalType` (
  `id` CHAR(36) NOT NULL,
  `id_SignalType` CHAR(36) NULL,
  PRIMARY KEY (`id`),
  INDEX `SI÷id_XYSigT×XYASiT` (`id_SignalType` ASC) ,
  CONSTRAINT `FK÷id_XYSiCT×XYASiT`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`SignalComponentType` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_XYSigT×XYASiT`
    FOREIGN KEY (`id_SignalType`)
    REFERENCES `InfraDB`.`SignalType` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`Balise`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`Balise` (
  `id` CHAR(36) NOT NULL,
  `baliseType` VARCHAR(32) NULL,
  `defaultTelegram` VARCHAR(256) NULL,
  `id_BaliseGroup` CHAR(36) NULL,
  `positionInGroup` INT NULL,
  `duplicate` VARCHAR(32) NULL,
  PRIMARY KEY (`id`),
  INDEX `SI÷id_XPBaGr×XPBlse` (`id_BaliseGroup` ASC) ,
  CONSTRAINT `FK÷id_XPTrPE×XPBlse`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`TrainProtectionEntity` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_XPBaGr×XPBlse`
    FOREIGN KEY (`id_BaliseGroup`)
    REFERENCES `InfraDB`.`BaliseGroup` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`BaliseGroup`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`BaliseGroup` (
  `id` CHAR(36) NOT NULL,
  `applicationType` VARCHAR(32) NULL,
  `mileageDirection` VARCHAR(32) NULL,
  `coverage` VARCHAR(32) NULL,
  `numberOfBalisesInGroup` INT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_XPTrPE×XPBaGr`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`TrainProtectionEntity` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`BaseObject`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`BaseObject` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`CircularArcHC`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CircularArcHC` (
  `id` CHAR(36) NOT NULL,
  `radius` DOUBLE NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_XGHorC×XGCAHC`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`HorizontalCurve` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`ClothoidHC`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`ClothoidHC` (
  `id` CHAR(36) NOT NULL,
  `radius0` DOUBLE NULL,
  `radius1` DOUBLE NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_XGHorC×XGClHC`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`HorizontalCurve` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`CompositionNetElement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CompositionNetElement` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_TNetEl×TCNtEl`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`NetElement` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`ConstantSuperelevation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`ConstantSuperelevation` (
  `id` CHAR(36) NOT NULL,
  `superelevation` DOUBLE NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_XGSuEl×XGCoSu`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`Superelevation` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`ControlEntity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`ControlEntity` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_XXMEnt×XCCtrl`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`ModularEntity` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`Crossing`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`Crossing` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_XSSuCo×XSCros`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`SuperstructureComponent` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`CubicParabolaHC`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CubicParabolaHC` (
  `id` CHAR(36) NOT NULL,
  `radius0` DOUBLE NULL,
  `radius1` DOUBLE NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_XGHorC×XGCPHC`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`HorizontalCurve` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`DerivedNetEntity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`DerivedNetEntity` (
  `id` CHAR(36) NOT NULL,
  `id_NetEntity_Template` CHAR(36) NOT NULL,
  `derivationRule` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  INDEX `SI÷id_ENetEtTemplate×EDerEt` (`id_NetEntity_Template` ASC) ,
  CONSTRAINT `FK÷id_ENetEt×EDerEt`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`NetEntity` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_ENetEtTemplate×EDerEt`
    FOREIGN KEY (`id_NetEntity_Template`)
    REFERENCES `InfraDB`.`NetEntity` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`ElectrificationArea`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`ElectrificationArea` (
  `id` CHAR(36) NOT NULL,
  `id_PowerSource` CHAR(36) NULL,
  `contactLineType` VARCHAR(32) NULL,
  PRIMARY KEY (`id`),
  INDEX `SI÷id_XEPwSr×XEElAr` (`id_PowerSource` ASC) ,
  CONSTRAINT `FK÷id_XEEleE×XEElAe`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`ElectrificationEntity` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_XEPwSr×XEElAr`
    FOREIGN KEY (`id_PowerSource`)
    REFERENCES `InfraDB`.`PowerSource` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`ElectrificationEntity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`ElectrificationEntity` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_XXMEnt×XEEleE`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`ModularEntity` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`ElementPartCollection`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`ElementPartCollection` (
  `id` CHAR(36) NOT NULL,
  `id_CompositionNetElement` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `SI÷id_TCNtEl×TElPaC` (`id_CompositionNetElement` ASC) ,
  CONSTRAINT `FK÷id_BBaObj×TElPaC`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`BaseObject` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_TCNtEl×TElPaC`
    FOREIGN KEY (`id_CompositionNetElement`)
    REFERENCES `InfraDB`.`CompositionNetElement` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`EntityLocation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`EntityLocation` (
  `id` CHAR(36) NOT NULL,
  `entityLocationUsage` VARCHAR(32) NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_BBaObj×LEtLoc`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`BaseObject` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`EntityLocationAssignment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`EntityLocationAssignment` (
  `id_EntityLocation` CHAR(36) NOT NULL,
  `id_LocatedNetEntity` CHAR(36) NOT NULL,
  PRIMARY KEY (`id_EntityLocation`, `id_LocatedNetEntity`),
  INDEX `SI÷id_ELocNE×EELocA` (`id_LocatedNetEntity` ASC) ,
  INDEX `SI÷id_LEtLoc×EELocA` (`id_EntityLocation` ASC) ,
  CONSTRAINT `FK÷id_ELocNE×EELocA`
    FOREIGN KEY (`id_LocatedNetEntity`)
    REFERENCES `InfraDB`.`LocatedNetEntity` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_LEtLoc×EELocA`
    FOREIGN KEY (`id_EntityLocation`)
    REFERENCES `InfraDB`.`EntityLocation` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`EntityType`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`EntityType` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_YGenTy×YEntTy`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`GeneralType` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`GeneralType`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`GeneralType` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_BNmRes×YGenTy`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`NamedResource` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`GeoFeature`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`GeoFeature` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_LLocFt×LGeoFt`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`LocalizationFeature` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`GeoFeatureAssociatedFeature`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`GeoFeatureAssociatedFeature` (
  `id_AssociatedFeature` CHAR(36) NOT NULL,
  `id_GeoFeature` CHAR(36) NOT NULL,
  PRIMARY KEY (`id_AssociatedFeature`, `id_GeoFeature`),
  INDEX `SI÷id_LAssFt×LGFAFt` (`id_AssociatedFeature` ASC) ,
  INDEX `SI÷id_LGeoFt×LGFAFt` (`id_GeoFeature` ASC) ,
  CONSTRAINT `FK÷id_LGeoFt×LGFAFt`
    FOREIGN KEY (`id_GeoFeature`)
    REFERENCES `InfraDB`.`GeoFeature` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_LAssFt×LGFAFt`
    FOREIGN KEY (`id_AssociatedFeature`)
    REFERENCES `InfraDB`.`AssociatedFeature` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`GeoLocation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`GeoLocation` (
  `id` CHAR(36) NOT NULL,
  `geoLocationType` VARCHAR(32) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_LEtLoc×LGeLoc`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`EntityLocation` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`GeoLocationFeature`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`GeoLocationFeature` (
  `id_GeoFeature` CHAR(36) NOT NULL,
  `id_GeoLocation` CHAR(36) NOT NULL,
  `sequence` INT NOT NULL,
  `keepsOrientation` CHAR(1) NOT NULL,
  PRIMARY KEY (`id_GeoFeature`, `id_GeoLocation`, `sequence`),
  INDEX `SI÷id_LGeLoc×LGeLFt` (`id_GeoLocation` ASC) ,
  INDEX `SI÷id_LGeoFt×LGeLFt` (`id_GeoFeature` ASC) ,
  CONSTRAINT `FK÷id_LGeLoc×LGeLFt`
    FOREIGN KEY (`id_GeoLocation`)
    REFERENCES `InfraDB`.`GeoLocation` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_LGeoFt×LGeLFt`
    FOREIGN KEY (`id_GeoFeature`)
    REFERENCES `InfraDB`.`GeoFeature` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`GeoLocationOrientation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`GeoLocationOrientation` (
  `id_GeoLocation` CHAR(36) NOT NULL,
  `id_PositioningSystem` CHAR(36) NOT NULL,
  `azimuthAngle` DOUBLE NULL,
  `elevationAngle` DOUBLE NULL,
  PRIMARY KEY (`id_GeoLocation`, `id_PositioningSystem`),
  INDEX `SI÷id_LGeLoc×PGLcOr` (`id_GeoLocation` ASC) ,
  INDEX `SI÷id_PPoSys×PGLcOr` (`id_PositioningSystem` ASC) ,
  CONSTRAINT `FK÷id_PPoSys×PGLcOr`
    FOREIGN KEY (`id_PositioningSystem`)
    REFERENCES `InfraDB`.`PositioningSystem` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_LGeLoc×PGLcOr`
    FOREIGN KEY (`id_GeoLocation`)
    REFERENCES `InfraDB`.`GeoLocation` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`GeoPoint`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`GeoPoint` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_LGeoFt×LGeoPt`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`GeoFeature` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`GeoPointGeoCoordinate`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`GeoPointGeoCoordinate` (
  `id_GeoPoint` CHAR(36) NOT NULL,
  `id_GeoPositioningSystem` CHAR(36) NOT NULL,
  `sequence` INT NOT NULL,
  `x` DOUBLE NULL,
  `y` DOUBLE NULL,
  `z` DOUBLE NULL,
  INDEX `SI÷id_PGeoPS×PGPGeC` (`id_GeoPositioningSystem` ASC) ,
  PRIMARY KEY (`id_GeoPoint`, `id_GeoPositioningSystem`, `sequence`),
  INDEX `SI÷id_LGeoPt×PGPGeC` (`id_GeoPoint` ASC) ,
  CONSTRAINT `FK÷id_PGeoPS×PGPGeC`
    FOREIGN KEY (`id_GeoPositioningSystem`)
    REFERENCES `InfraDB`.`GeoPositioningSystem` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_LGeoPt×PGPGeC`
    FOREIGN KEY (`id_GeoPoint`)
    REFERENCES `InfraDB`.`GeoPoint` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`GeoPointLinearCoordinate`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`GeoPointLinearCoordinate` (
  `id_GeoPoint` CHAR(36) NOT NULL,
  `id_LinearPositioningSystem` CHAR(36) NOT NULL,
  `sequence` INT NOT NULL,
  `measure` DOUBLE NULL,
  `lateralOffset` DOUBLE NULL,
  `verticalOffset` DOUBLE NULL,
  INDEX `SI÷id_PLinPS×PGPLiC` (`id_LinearPositioningSystem` ASC) ,
  PRIMARY KEY (`id_GeoPoint`, `id_LinearPositioningSystem`, `sequence`),
  INDEX `SI÷id_LGeoPt×PGPLiC` (`id_GeoPoint` ASC) ,
  CONSTRAINT `FK÷id_PLinPS×PGPLiC`
    FOREIGN KEY (`id_LinearPositioningSystem`)
    REFERENCES `InfraDB`.`LinearPositioningSystem` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_LGeoPt×PGPLiC`
    FOREIGN KEY (`id_GeoPoint`)
    REFERENCES `InfraDB`.`GeoPoint` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`GeoPolygonalChain`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`GeoPolygonalChain` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_LGeoFt×LGeoPC`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`GeoFeature` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`GeoPolygonalChainGeoPoint`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`GeoPolygonalChainGeoPoint` (
  `id_GeoPolygonalChain` CHAR(36) NOT NULL,
  `id_GeoPoint` CHAR(36) NOT NULL,
  `sequence` INT NOT NULL,
  PRIMARY KEY (`id_GeoPolygonalChain`, `id_GeoPoint`, `sequence`),
  INDEX `SI÷id_LGeoPt×LGPCGP` (`id_GeoPoint` ASC) ,
  INDEX `SI÷id_LGeoPC×LGPCGP` (`id_GeoPolygonalChain` ASC) ,
  CONSTRAINT `FK÷id_LGeoPC×LGPCGP`
    FOREIGN KEY (`id_GeoPolygonalChain`)
    REFERENCES `InfraDB`.`GeoPolygonalChain` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_LGeoPt×LGPCGP`
    FOREIGN KEY (`id_GeoPoint`)
    REFERENCES `InfraDB`.`GeoPoint` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`GeoPositioningSystem`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`GeoPositioningSystem` (
  `id` CHAR(36) NOT NULL,
  `crsDefinition` VARCHAR(32) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_PPoSys×PGeoPS`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`PositioningSystem` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`GeometryEntity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`GeometryEntity` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_ENetEt×XGGeoE`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`NetEntity` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`HorizontalCurve`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`HorizontalCurve` (
  `id` CHAR(36) NOT NULL,
  `azimuth0` DOUBLE NULL,
  `deltaAzimuth` DOUBLE NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_XGGeoE×XGHorC`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`GeometryEntity` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`ImpedanceTransformer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`ImpedanceTransformer` (
  `id` CHAR(36) NOT NULL,
  `impedanceTransformerType` VARCHAR(32) NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_XDTrDE×XDITra`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`TrainDetectionEntity` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`IndicatorType`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`IndicatorType` (
  `id` CHAR(36) NOT NULL,
  `indicatorMeaning` VARCHAR(32) NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_XYSiCT×XYIndT`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`SignalComponentType` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`InsulatedRailJoint`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`InsulatedRailJoint` (
  `id` CHAR(36) NOT NULL,
  `id_TrackCircuit_A` CHAR(36) NULL,
  `id_TrackCircuit_B` CHAR(36) NULL,
  `id_ImpedanceTransformer` CHAR(36) NULL,
  PRIMARY KEY (`id`),
  INDEX `SI÷id_XDTCirA×XDIsRJ` (`id_TrackCircuit_A` ASC) ,
  INDEX `SI÷id_XDTCirB×XDIsRJ` (`id_TrackCircuit_B` ASC) ,
  INDEX `SI÷id_XDITra×XDIsRJ` (`id_ImpedanceTransformer` ASC) ,
  CONSTRAINT `FK÷id_XDTrDE×XDIsRJ`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`TrainDetectionEntity` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_XDTCirA×XDIsRJ`
    FOREIGN KEY (`id_TrackCircuit_A`)
    REFERENCES `InfraDB`.`TrackCircuit` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_XDTCirB×XDIsRJ`
    FOREIGN KEY (`id_TrackCircuit_B`)
    REFERENCES `InfraDB`.`TrackCircuit` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_XDITra×XDIsRJ`
    FOREIGN KEY (`id_ImpedanceTransformer`)
    REFERENCES `InfraDB`.`ImpedanceTransformer` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`LabelType`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`LabelType` (
  `id` CHAR(36) NOT NULL,
  `labelMeaning` VARCHAR(32) NULL,
  `units` VARCHAR(32) NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_XYSiCT×XYLabT`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`SignalComponentType` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`LevelNetwork`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`LevelNetwork` (
  `id` CHAR(36) NOT NULL,
  `descriptionLevel` VARCHAR(32) NOT NULL,
  `representation` VARCHAR(32) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_BBaObj×NLevNw`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`BaseObject` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`LevelResourceAssignment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`LevelResourceAssignment` (
  `id_NetworkResource` CHAR(36) NOT NULL,
  `id_LevelNetwork` CHAR(36) NOT NULL,
  PRIMARY KEY (`id_NetworkResource`, `id_LevelNetwork`),
  INDEX `SI÷id_NNtwRs×NLvRsA` (`id_NetworkResource` ASC) ,
  INDEX `SI÷id_NLevNw×NLvRsA` (`id_LevelNetwork` ASC) ,
  CONSTRAINT `FK÷id_NLevNw×NLvRsA`
    FOREIGN KEY (`id_LevelNetwork`)
    REFERENCES `InfraDB`.`LevelNetwork` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_NNtwRs×NLvRsA`
    FOREIGN KEY (`id_NetworkResource`)
    REFERENCES `InfraDB`.`NetworkResource` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`LightType`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`LightType` (
  `id` CHAR(36) NOT NULL,
  `lightColour` VARCHAR(32) NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_XYSiCT×XYLigT`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`SignalComponentType` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`LinearAnchorPoint`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`LinearAnchorPoint` (
  `id` CHAR(36) NOT NULL,
  `id_LinearPositioningSystem` CHAR(36) NOT NULL,
  `anchorName` VARCHAR(128) NULL,
  `measure` DOUBLE NOT NULL,
  `id_LinearAnchorPoint_Next` CHAR(36) NULL,
  `measureToNext` DOUBLE NULL,
  PRIMARY KEY (`id`),
  INDEX `SI÷id_PLinPS×PLinAP` (`id_LinearPositioningSystem` ASC) ,
  INDEX `SI÷id_PLinAPNext×PLinAP` (`id_LinearAnchorPoint_Next` ASC) ,
  CONSTRAINT `FK÷id_BBaObj×PLinAP`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`BaseObject` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_PLinPS×PLinAP`
    FOREIGN KEY (`id_LinearPositioningSystem`)
    REFERENCES `InfraDB`.`LinearPositioningSystem` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_PLinAPNext×PLinAP`
    FOREIGN KEY (`id_LinearAnchorPoint_Next`)
    REFERENCES `InfraDB`.`LinearAnchorPoint` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`LinearElement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`LinearElement` (
  `id` CHAR(36) NOT NULL,
  `length` DOUBLE NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_TPNtEl×TLinEl`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`PositioningNetElement` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`LinearPositioningSystem`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`LinearPositioningSystem` (
  `id` CHAR(36) NOT NULL,
  `linearReferencingMethod` VARCHAR(32) NULL,
  `startMeasure` DOUBLE NULL,
  `endMeasure` DOUBLE NULL,
  `units` VARCHAR(32) NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_PPoSys×PLinPS`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`PositioningSystem` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`LinearSuperelevationRamp`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`LinearSuperelevationRamp` (
  `id` CHAR(36) NOT NULL,
  `superelevation0` DOUBLE NULL,
  `superelevation1` DOUBLE NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_XGSuEl×XGLiSR`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`Superelevation` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`LocalizationFeature`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`LocalizationFeature` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_BNmRes×LLocFt`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`NamedResource` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`LocatedNetEntity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`LocatedNetEntity` (
  `id` CHAR(36) NOT NULL,
  `id_EntityLocation_Primary` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `SI÷id_LEtLocPrimary×ELocNE` (`id_EntityLocation_Primary` ASC) ,
  CONSTRAINT `FK÷id_ENetEt×ELocNE`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`NetEntity` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_LEtLocPrimary×ELocNE`
    FOREIGN KEY (`id_EntityLocation_Primary`)
    REFERENCES `InfraDB`.`EntityLocation` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`ModularEntity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`ModularEntity` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_ENetEt×XXMEnt`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`NetEntity` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`ModularEntityType`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`ModularEntityType` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_YEntTy×XYMEtT`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`EntityType` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`NamedResource`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`NamedResource` (
  `id` CHAR(36) NOT NULL,
  `name` VARCHAR(64) NULL,
  `longname` VARCHAR(128) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `UI÷name×BNmRes` (`name` ASC) ,
  CONSTRAINT `FK÷id_BBaObj×BNmRes`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`BaseObject` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`NetElement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`NetElement` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_NNtwRs×TNetEl`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`NetworkResource` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`NetEntity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`NetEntity` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_NNtwRs×ENetEt`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`NetworkResource` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`Network`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`Network` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_BNmRes×NNetwk`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`NamedResource` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`NetworkLevelAssignment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`NetworkLevelAssignment` (
  `id_LevelNetwork` CHAR(36) NOT NULL,
  `id_Network` CHAR(36) NOT NULL,
  PRIMARY KEY (`id_LevelNetwork`, `id_Network`),
  INDEX `SI÷id_NNetwk×NNwLvA` (`id_Network` ASC) ,
  INDEX `SI÷id_NLevNw×NNwLvA` (`id_LevelNetwork` ASC) ,
  CONSTRAINT `FK÷id_NLevNw×NLvNwA`
    FOREIGN KEY (`id_LevelNetwork`)
    REFERENCES `InfraDB`.`LevelNetwork` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_NNetwk×NLvNwA`
    FOREIGN KEY (`id_Network`)
    REFERENCES `InfraDB`.`Network` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`NetworkResource`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`NetworkResource` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_BNmRes×NNtwRs`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`NamedResource` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`NetworkResourceAssignment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`NetworkResourceAssignment` (
  `id_NetworkResource` CHAR(36) NOT NULL,
  `id_Network` CHAR(36) NOT NULL,
  PRIMARY KEY (`id_NetworkResource`, `id_Network`),
  INDEX `SI÷id_NNetwk×NNwRsA` (`id_Network` ASC) ,
  INDEX `SI÷id_NNtwRs×NNwRsA` (`id_NetworkResource` ASC) ,
  CONSTRAINT `FK÷id_NNetwk×NNwRsA`
    FOREIGN KEY (`id_Network`)
    REFERENCES `InfraDB`.`Network` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_NNtwRs×NNwRsA`
    FOREIGN KEY (`id_NetworkResource`)
    REFERENCES `InfraDB`.`NetworkResource` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`NonLinearElement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`NonLinearElement` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_TPNtEl×TNoLEl`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`PositioningNetElement` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`ObjectProjection`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`ObjectProjection` (
  `id` CHAR(36) NOT NULL,
  `id_BaseObject` CHAR(36) NOT NULL,
  `id_Visualization` CHAR(36) NOT NULL,
  `id_ObjectProjectionSymbol` CHAR(36) NULL,
  PRIMARY KEY (`id`),
  INDEX `SI÷id_VVisul×VObjPr` (`id_Visualization` ASC) ,
  INDEX `SI÷id_BBaObj×VObjPr` (`id_BaseObject` ASC) ,
  INDEX `SI÷id_VObjPS×VObjPr` (`id_ObjectProjectionSymbol` ASC) ,
  CONSTRAINT `FK÷id_VVBObj×VObjPr`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`VisualizationBaseObject` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_VVisul×VObjPr`
    FOREIGN KEY (`id_Visualization`)
    REFERENCES `InfraDB`.`Visualization` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_BBaObj×VObjPr`
    FOREIGN KEY (`id_BaseObject`)
    REFERENCES `InfraDB`.`BaseObject` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_VObjPS×VObjPr`
    FOREIGN KEY (`id_ObjectProjectionSymbol`)
    REFERENCES `InfraDB`.`ObjectProjectionSymbol` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`ObjectProjectionCoordinate`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`ObjectProjectionCoordinate` (
  `id_ObjectProjection` CHAR(36) NOT NULL,
  `id_ScreenPositioningSystem` CHAR(36) NOT NULL,
  `sequence` INT NOT NULL,
  `x` INT UNSIGNED NOT NULL,
  `y` INT UNSIGNED NOT NULL,
  `z` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id_ObjectProjection`, `id_ScreenPositioningSystem`, `sequence`),
  INDEX `SI÷id_VScrPS×VObjPC` (`id_ScreenPositioningSystem` ASC) ,
  INDEX `SI÷id_VObjPr×VObjPC` (`id_ObjectProjection` ASC) ,
  CONSTRAINT `FK÷id_VScrPS×VObjPC`
    FOREIGN KEY (`id_ScreenPositioningSystem`)
    REFERENCES `InfraDB`.`ScreenPositioningSystem` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_VObjPr×VObjPC`
    FOREIGN KEY (`id_ObjectProjection`)
    REFERENCES `InfraDB`.`ObjectProjection` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`ObjectProjectionSymbol`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`ObjectProjectionSymbol` (
  `id` CHAR(36) NOT NULL,
  `externalIconRef` VARCHAR(260) NOT NULL,
  `orientation` VARCHAR(16) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_VVBObj×VObjPS`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`VisualizationBaseObject` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`OperationalArea`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`OperationalArea` (
  `id` CHAR(36) NOT NULL,
  `isStoppingPoint` CHAR(1) NULL,
  `isStation` CHAR(1) NULL,
  `isDepot` CHAR(1) NULL,
  `isJunction` CHAR(1) NULL,
  `isInterstationSection` CHAR(1) NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_XOOpeE×XOOpAr`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`OperationalEntity` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`OperationalAreaSignalAssignment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`OperationalAreaSignalAssignment` (
  `id_Signal` CHAR(36) NOT NULL,
  `id_OperationalArea` CHAR(36) NOT NULL,
  `operationalDesignator` VARCHAR(32) NULL,
  `operationalFunction` VARCHAR(32) NULL,
  PRIMARY KEY (`id_Signal`, `id_OperationalArea`),
  INDEX `SI÷id_XOOpAr×XOOASA` (`id_OperationalArea` ASC) ,
  INDEX `SI÷id_XCSign×XOOASA` (`id_Signal` ASC) ,
  CONSTRAINT `FK÷id_XCSign×XOOASA`
    FOREIGN KEY (`id_Signal`)
    REFERENCES `InfraDB`.`TracksideSignal` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_XOOpAr×XOOASA`
    FOREIGN KEY (`id_OperationalArea`)
    REFERENCES `InfraDB`.`OperationalArea` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`OperationalEntity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`OperationalEntity` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_XMPMtE×XOOpeE`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`ModularEntity` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`OrderedCollection`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`OrderedCollection` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_TElPaC×TOrCol`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`ElementPartCollection` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`OrderedCollectionElement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`OrderedCollectionElement` (
  `id_NetElement` CHAR(36) NOT NULL,
  `id_OrderedCollection` CHAR(36) NOT NULL,
  `sequence` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id_NetElement`, `id_OrderedCollection`),
  INDEX `SI÷id_TOrCol×TOColE` (`id_OrderedCollection` ASC) ,
  UNIQUE INDEX `UI÷id_TOrCol·sequence×TOColE` (`sequence` ASC, `id_OrderedCollection` ASC) ,
  INDEX `SI÷id_TNetEl×TOColE` (`id_NetElement` ASC) ,
  CONSTRAINT `FK÷id_TNetEl×TOColE`
    FOREIGN KEY (`id_NetElement`)
    REFERENCES `InfraDB`.`NetElement` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_TOrCol×TOColE`
    FOREIGN KEY (`id_OrderedCollection`)
    REFERENCES `InfraDB`.`OrderedCollection` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`ParabolaVC`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`ParabolaVC` (
  `id` CHAR(36) NOT NULL,
  `parabolaVertexRadius` DOUBLE NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_XGVerC×XGPbVC`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`VerticalCurve` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`Platform`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`Platform` (
  `id` CHAR(36) NOT NULL,
  `id_OperationalArea` CHAR(36) NULL,
  `width` DOUBLE NULL,
  `platformType` VARCHAR(32) NULL,
  PRIMARY KEY (`id`),
  INDEX `SI÷id_XOOpAr×XSPlat` (`id_OperationalArea` ASC) ,
  CONSTRAINT `FK÷id_XSStrE×XSPlat`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`StructuralEntity` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_XOOpAr×XSPlat`
    FOREIGN KEY (`id_OperationalArea`)
    REFERENCES `InfraDB`.`OperationalArea` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`PlatformEdge`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`PlatformEdge` (
  `id` CHAR(36) NOT NULL,
  `id_Platform` CHAR(36) NULL,
  `maximumTrainLength` DOUBLE NULL,
  PRIMARY KEY (`id`),
  INDEX `SI÷id_XSPlat×XSPlEg` (`id_Platform` ASC) ,
  CONSTRAINT `FK÷id_XOOpeE×XSPlEg`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`OperationalEntity` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_XSPlat×XSPlEg`
    FOREIGN KEY (`id_Platform`)
    REFERENCES `InfraDB`.`Platform` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`PlatformStoppingPlace`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`PlatformStoppingPlace` (
  `id` CHAR(36) NOT NULL,
  `id_PlatformEdge` CHAR(36) NULL,
  PRIMARY KEY (`id`),
  INDEX `SI÷id_XSPlEg×XOPlSP` (`id_PlatformEdge` ASC) ,
  CONSTRAINT `FK÷id_XOStPl×XOPlSP`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`StoppingPlace` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_XSPlEg×XOPlSP`
    FOREIGN KEY (`id_PlatformEdge`)
    REFERENCES `InfraDB`.`PlatformEdge` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`PositionedRelation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`PositionedRelation` (
  `id` CHAR(36) NOT NULL,
  `id_PositioningNetElement_A` CHAR(36) NOT NULL,
  `id_PositioningNetElement_B` CHAR(36) NOT NULL,
  `positionOnA` CHAR(1) NOT NULL,
  `positionOnB` CHAR(1) NOT NULL,
  `navigability` VARCHAR(32) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `SI÷id_TPNtElA×TPosRt` (`id_PositioningNetElement_A` ASC) ,
  INDEX `SI÷id_TPNtElB×TPosRt` (`id_PositioningNetElement_B` ASC) ,
  CONSTRAINT `FK÷id_TRelat×TPosRt`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`Relation` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_TPNtElA×TPosRt`
    FOREIGN KEY (`id_PositioningNetElement_A`)
    REFERENCES `InfraDB`.`PositioningNetElement` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_TPNtElB×TPosRt`
    FOREIGN KEY (`id_PositioningNetElement_B`)
    REFERENCES `InfraDB`.`PositioningNetElement` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`PositioningNetElement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`PositioningNetElement` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_TCNtEl×TPNtEl`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`CompositionNetElement` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`PositioningSystem`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`PositioningSystem` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_BNmRes×PPoSys`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`NamedResource` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`PowerSource`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`PowerSource` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_XEEleE×XEPwSr`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`ElectrificationEntity` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`RailwayRoute`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`RailwayRoute` (
  `id` CHAR(36) NOT NULL,
  `railwayRouteType` VARCHAR(32) NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_XOOpeE×XORaRo`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`OperationalEntity` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`Relation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`Relation` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_NNtwRs×TRelat`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`NetworkResource` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`RouteComponentAssignment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`RouteComponentAssignment` (
  `id_SuperstructureComponent` CHAR(36) NOT NULL,
  `id_RailwayRoute` CHAR(36) NOT NULL,
  `routeRole` VARCHAR(32) NULL,
  `assignmentType` VARCHAR(32) NULL,
  PRIMARY KEY (`id_SuperstructureComponent`, `id_RailwayRoute`),
  INDEX `SI÷id_XORaRo×XORCoA` (`id_RailwayRoute` ASC) ,
  INDEX `SI÷id_XSSuCo×XORCoA` (`id_SuperstructureComponent` ASC) ,
  CONSTRAINT `FK÷id_XSSuCo×XORCoA`
    FOREIGN KEY (`id_SuperstructureComponent`)
    REFERENCES `InfraDB`.`SuperstructureComponent` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_XORaRo×XORCoA`
    FOREIGN KEY (`id_RailwayRoute`)
    REFERENCES `InfraDB`.`RailwayRoute` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`RouteControlEntityAssignment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`RouteControlEntityAssignment` (
  `id_ControlEntity` CHAR(36) NOT NULL,
  `id_RailwayRoute` CHAR(36) NOT NULL,
  `requiredState` VARCHAR(32) NULL,
  PRIMARY KEY (`id_ControlEntity`, `id_RailwayRoute`),
  INDEX `SI÷id_XORaRo×XORCEA` (`id_RailwayRoute` ASC) ,
  INDEX `SI÷id_XCConE×XORCEA` (`id_ControlEntity` ASC) ,
  CONSTRAINT `FK÷id_XORaRo×XORCEA`
    FOREIGN KEY (`id_RailwayRoute`)
    REFERENCES `InfraDB`.`RailwayRoute` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_XCConE×XORCEA`
    FOREIGN KEY (`id_ControlEntity`)
    REFERENCES `InfraDB`.`ControlEntity` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`RouteCurveAssignment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`RouteCurveAssignment` (
  `id_HorizontalCurve` CHAR(36) NOT NULL,
  `id_RailwayRoute` CHAR(36) NOT NULL,
  `sequence` INT NOT NULL,
  PRIMARY KEY (`id_HorizontalCurve`, `id_RailwayRoute`, `sequence`),
  INDEX `SI÷id_XGHorC×XORCuA` (`id_HorizontalCurve` ASC) ,
  INDEX `SI÷id_XORaRo×XORCuA` (`id_RailwayRoute` ASC) ,
  CONSTRAINT `FK÷id_XORaRo×XORCuA`
    FOREIGN KEY (`id_RailwayRoute`)
    REFERENCES `InfraDB`.`RailwayRoute` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_XGHorC×XORCuA`
    FOREIGN KEY (`id_HorizontalCurve`)
    REFERENCES `InfraDB`.`HorizontalCurve` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`ScreenPositioningSystem`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`ScreenPositioningSystem` (
  `id` CHAR(36) NOT NULL,
  `pxX` INT UNSIGNED NOT NULL,
  `pxY` INT UNSIGNED NOT NULL,
  `pxZ` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_PPoSys×VScrPS`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`PositioningSystem` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`SignalComponentType`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`SignalComponentType` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_XYMEtT×XYSiCT`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`ModularEntityType` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`SignalComponentTypeAssignment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`SignalComponentTypeAssignment` (
  `id_SignalType` CHAR(36) NOT NULL,
  `id_SignalComponentType` CHAR(36) NOT NULL,
  `verticalPosition` DOUBLE NULL,
  `horizontalPosition` DOUBLE NULL,
  PRIMARY KEY (`id_SignalType`, `id_SignalComponentType`),
  INDEX `SI÷id_XYSigT×XYSCTA` (`id_SignalType` ASC) ,
  INDEX `SI÷id_XYSiCT×XYSCTA` (`id_SignalComponentType` ASC) ,
  CONSTRAINT `FK÷id_XYSiCT×XYSCTA`
    FOREIGN KEY (`id_SignalComponentType`)
    REFERENCES `InfraDB`.`SignalComponentType` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_XYSigT×XYSCTA`
    FOREIGN KEY (`id_SignalType`)
    REFERENCES `InfraDB`.`SignalType` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`SignalLabelTypeAssignment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`SignalLabelTypeAssignment` (
  `id_Signal` CHAR(36) NOT NULL,
  `id_LabelType` CHAR(36) NOT NULL,
  `indicatedValue` VARCHAR(32) NULL,
  PRIMARY KEY (`id_Signal`, `id_LabelType`),
  INDEX `SI÷id_XYLabT×XCSLTA` (`id_LabelType` ASC) ,
  INDEX `SI÷id_XCTSig×XCSLTA` (`id_Signal` ASC) ,
  CONSTRAINT `FK÷id_XCTSig×XCSLTA`
    FOREIGN KEY (`id_Signal`)
    REFERENCES `InfraDB`.`TracksideSignal` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_XYLabT×XCSLTA`
    FOREIGN KEY (`id_LabelType`)
    REFERENCES `InfraDB`.`LabelType` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`SignalType`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`SignalType` (
  `id` CHAR(36) NOT NULL,
  `signalCategory` VARCHAR(32) NULL,
  `signalConstructionType` VARCHAR(32) NULL,
  `defaultIndication` VARCHAR(32) NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_XYMEtT×XYSigT`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`ModularEntityType` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`SignificantLoopPoint`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`SignificantLoopPoint` (
  `id` CHAR(36) NOT NULL,
  `id_TransmissionLoop` CHAR(36) NULL,
  `loopPointType` VARCHAR(32) NULL,
  PRIMARY KEY (`id`),
  INDEX `SI÷id_XPTmLp×XPSLpP` (`id_TransmissionLoop` ASC) ,
  CONSTRAINT `FK÷id_XPTrPE×XPSLpP`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`TrainProtectionEntity` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_XPTmLp×XPSLpP`
    FOREIGN KEY (`id_TransmissionLoop`)
    REFERENCES `InfraDB`.`TransmissionLoop` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`SpeedProfile`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`SpeedProfile` (
  `id` CHAR(36) NOT NULL,
  `speedProfileType` VARCHAR(32) NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_XOOpeE×XOStPl00`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`OperationalEntity` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`SpeedProfileSectionAssignment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`SpeedProfileSectionAssignment` (
  `id_SpeedSection` CHAR(36) NOT NULL,
  `id_SpeedProfile` CHAR(36) NOT NULL,
  PRIMARY KEY (`id_SpeedSection`, `id_SpeedProfile`),
  INDEX `SI÷id_XOSpSc×XOSPSA` (`id_SpeedSection` ASC) ,
  INDEX `SI÷id_XOSpPf×XOSPSA` (`id_SpeedProfile` ASC) ,
  CONSTRAINT `FK÷id_XOSpPf×XOSPSA`
    FOREIGN KEY (`id_SpeedProfile`)
    REFERENCES `InfraDB`.`SpeedProfile` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_XOSpSc×XOSPSA`
    FOREIGN KEY (`id_SpeedSection`)
    REFERENCES `InfraDB`.`SpeedSection` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`SpeedSection`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`SpeedSection` (
  `id` CHAR(36) NOT NULL,
  `maxSpeed` DOUBLE NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_XOOpeE×XOStPl0`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`OperationalEntity` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`SpeedSectionSignalAssignment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`SpeedSectionSignalAssignment` (
  `id_Signal` CHAR(36) NOT NULL,
  `id_SpeedSection` CHAR(36) NOT NULL,
  `signalRole` VARCHAR(32) NULL,
  `trainRelation` VARCHAR(32) NULL,
  PRIMARY KEY (`id_Signal`, `id_SpeedSection`),
  INDEX `SI÷id_XOSpSc×XOSSSA` (`id_SpeedSection` ASC) ,
  INDEX `SI÷id_XCTSig×XOSSSA` (`id_Signal` ASC) ,
  CONSTRAINT `FK÷id_XCTSig×XOSSSA`
    FOREIGN KEY (`id_Signal`)
    REFERENCES `InfraDB`.`TracksideSignal` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_XOSpSc×XOSSSA`
    FOREIGN KEY (`id_SpeedSection`)
    REFERENCES `InfraDB`.`SpeedSection` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`StoppingPlace`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`StoppingPlace` (
  `id` CHAR(36) NOT NULL,
  `trainRelation` VARCHAR(32) NULL,
  `wagonCount` INT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_XOOpeE×XOStPl`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`OperationalEntity` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`StraightHC`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`StraightHC` (
  `id` CHAR(36) NOT NULL,
  `horizontalLength` DOUBLE NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_XGHorC×XGStHC`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`HorizontalCurve` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`StraightVC`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`StraightVC` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_XGVerC×XGStVC`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`VerticalCurve` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`StructuralEntity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`StructuralEntity` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_XXMEnt×XSStrE`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`ModularEntity` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`Superelevation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`Superelevation` (
  `id` CHAR(36) NOT NULL,
  `anchoredAxisReference` CHAR(2) NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_XGGeoE×XGSuEl`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`GeometryEntity` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`SuperstructureComponent`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`SuperstructureComponent` (
  `id` CHAR(36) NOT NULL,
  `id_OperationalArea` CHAR(36) NULL,
  `operationalDesignator` VARCHAR(32) NULL,
  PRIMARY KEY (`id`),
  INDEX `SI÷id_XOOpAr×XSSuCo` (`id_OperationalArea` ASC) ,
  CONSTRAINT `FK÷id_XSStrE×XSSuCo`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`StructuralEntity` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_XOOpAr×XSSuCo`
    FOREIGN KEY (`id_OperationalArea`)
    REFERENCES `InfraDB`.`OperationalArea` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`SwitchMachine`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`SwitchMachine` (
  `id` CHAR(36) NOT NULL,
  `id_Turnout` CHAR(36) NULL,
  `switchMachineRole` VARCHAR(32) NULL,
  `defaultState` VARCHAR(32) NULL,
  `id_TracksideSignal` CHAR(36) NULL,
  PRIMARY KEY (`id`),
  INDEX `SI÷id_XCTSig×XCSwMa` (`id_TracksideSignal` ASC) ,
  INDEX `SI÷id_XCSwMa×XSTurn` (`id_Turnout` ASC) ,
  CONSTRAINT `FK÷id_XCConE×XCSwMa`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`ControlEntity` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_XCTSig×XCSwMa`
    FOREIGN KEY (`id_TracksideSignal`)
    REFERENCES `InfraDB`.`TracksideSignal` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_XCSwMa×XSTurn`
    FOREIGN KEY (`id_Turnout`)
    REFERENCES `InfraDB`.`Turnout` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`SwitchMachineRelationAssignment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`SwitchMachineRelationAssignment` (
  `id_SwitchMachine` CHAR(36) NOT NULL,
  `id_PossitionedRelation` CHAR(36) NOT NULL,
  `validForState` VARCHAR(32) NULL,
  PRIMARY KEY (`id_SwitchMachine`, `id_PossitionedRelation`),
  INDEX `SI÷id_TPosRt×XCSMRA` (`id_PossitionedRelation` ASC) ,
  INDEX `SI÷id_XCSwMa×XCSMRA` (`id_SwitchMachine` ASC) ,
  CONSTRAINT `FK÷id_XCSwMa×XCSMRA`
    FOREIGN KEY (`id_SwitchMachine`)
    REFERENCES `InfraDB`.`SwitchMachine` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_TPosRt×XCSMRA`
    FOREIGN KEY (`id_PossitionedRelation`)
    REFERENCES `InfraDB`.`PositionedRelation` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`SymbolCoordinate`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`SymbolCoordinate` (
  `id_ObjectProjectionSymbol` CHAR(36) NOT NULL,
  `id_ScreenPositioningSystem` CHAR(36) NOT NULL,
  `x` INT UNSIGNED NOT NULL,
  `y` INT UNSIGNED NOT NULL,
  `z` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id_ObjectProjectionSymbol`, `id_ScreenPositioningSystem`),
  INDEX `SI÷id_VScrPS×VSymCo` (`id_ScreenPositioningSystem` ASC) ,
  INDEX `SI÷id_VObjPS×VSymCo` (`id_ObjectProjectionSymbol` ASC) ,
  CONSTRAINT `FK÷id_VScrPS×VSymCo`
    FOREIGN KEY (`id_ScreenPositioningSystem`)
    REFERENCES `InfraDB`.`ScreenPositioningSystem` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_VObjPS×VSymCo`
    FOREIGN KEY (`id_ObjectProjectionSymbol`)
    REFERENCES `InfraDB`.`ObjectProjectionSymbol` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`Track`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`Track` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_XSSuCo×XSTrac`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`SuperstructureComponent` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`TrackBed`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`TrackBed` (
  `id` CHAR(36) NOT NULL,
  `trackBedType` VARCHAR(32) NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_XSStrE×XSTBed`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`StructuralEntity` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`TrackCircuit`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`TrackCircuit` (
  `id` CHAR(36) NOT NULL,
  `id_OperationalArea` CHAR(36) NULL,
  PRIMARY KEY (`id`),
  INDEX `SI÷id_XOOpAr×XDTCir` (`id_OperationalArea` ASC) ,
  CONSTRAINT `FK÷id_XDTrDE×XDTCir`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`TrainDetectionEntity` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_XOOpPt×XDTCir`
    FOREIGN KEY (`id_OperationalArea`)
    REFERENCES `InfraDB`.`OperationalArea` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`TrackCircuitLoopAssignment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`TrackCircuitLoopAssignment` (
  `id_TransmissionLoop` CHAR(36) NOT NULL,
  `id_TrackCircuit` CHAR(36) NOT NULL,
  PRIMARY KEY (`id_TransmissionLoop`, `id_TrackCircuit`),
  INDEX `SI÷id_XPTmLp×XDTCLA` (`id_TransmissionLoop` ASC) ,
  INDEX `SI÷id_XDTCir×XDTCLA` (`id_TrackCircuit` ASC) ,
  CONSTRAINT `FK÷id_XDTCir×XDTCLA`
    FOREIGN KEY (`id_TrackCircuit`)
    REFERENCES `InfraDB`.`TrackCircuit` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_XPTmLp×XDTCLA`
    FOREIGN KEY (`id_TransmissionLoop`)
    REFERENCES `InfraDB`.`TransmissionLoop` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`TracksideSignal`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`TracksideSignal` (
  `id` CHAR(36) NOT NULL,
  `id_SignalType` CHAR(36) NULL,
  `referencePointHeight` DOUBLE NULL,
  PRIMARY KEY (`id`),
  INDEX `SI÷id_XYSigT×XCTSig` (`id_SignalType` ASC) ,
  CONSTRAINT `FK÷id_XCConE×XCTSig`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`ControlEntity` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_XYSigT×XCTSig`
    FOREIGN KEY (`id_SignalType`)
    REFERENCES `InfraDB`.`SignalType` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`TrainDetectionEntity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`TrainDetectionEntity` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_XXMEnt×XDTrDE`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`ModularEntity` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`TrainProtectionEntity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`TrainProtectionEntity` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_XXMEnt×XPTrPE`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`ModularEntity` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`TransmissionLoop`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`TransmissionLoop` (
  `id` CHAR(36) NOT NULL,
  `id_TransmitterBox` CHAR(36) NULL,
  PRIMARY KEY (`id`),
  INDEX `SI÷id_XPTmLp×XPSLpP` (`id_TransmitterBox` ASC) ,
  CONSTRAINT `FK÷id_XPTrPE×XPTmLp`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`TrainProtectionEntity` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_XPTmBx×XPTmLp`
    FOREIGN KEY (`id_TransmitterBox`)
    REFERENCES `InfraDB`.`TransmitterBox` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`TransmitterBox`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`TransmitterBox` (
  `id` CHAR(36) NOT NULL,
  `protectionSystem` VARCHAR(32) NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_XPTrPE×XPTmBx`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`TrainProtectionEntity` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`Tunnel`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`Tunnel` (
  `id` CHAR(36) NOT NULL,
  `numberOfTracks` INT NULL,
  `liningMaterial` VARCHAR(32) NULL,
  `crossSectionShape` VARCHAR(32) NULL,
  `horizontalCrossSectionDimension` DOUBLE NULL,
  `height` DOUBLE NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_XSStrE×XSTunl`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`StructuralEntity` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`Turnout`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`Turnout` (
  `id` CHAR(36) NOT NULL,
  `turnoutType` VARCHAR(32) NULL,
  `technicalDesignator` VARCHAR(64) NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_XSSuCo×XSTurn`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`SuperstructureComponent` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`UnorderedCollection`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`UnorderedCollection` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_TElPaC×TUoCol`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`ElementPartCollection` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`UnorderedCollectionElement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`UnorderedCollectionElement` (
  `id_NetElement` CHAR(36) NOT NULL,
  `id_UnorderedCollection` CHAR(36) NOT NULL,
  PRIMARY KEY (`id_NetElement`, `id_UnorderedCollection`),
  INDEX `SI÷id_TUoCol×TUColE` (`id_UnorderedCollection` ASC) ,
  INDEX `SI÷id_TNetEl×TUColE` (`id_NetElement` ASC) ,
  CONSTRAINT `FK÷id_TNetEl×TUColE`
    FOREIGN KEY (`id_NetElement`)
    REFERENCES `InfraDB`.`NetElement` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK÷id_TUoCol×TUColE`
    FOREIGN KEY (`id_UnorderedCollection`)
    REFERENCES `InfraDB`.`UnorderedCollection` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`VerticalCurve`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`VerticalCurve` (
  `id` CHAR(36) NOT NULL,
  `horizontalLength` DOUBLE NULL,
  `elevation0` DOUBLE NULL,
  `deltaElevation` DOUBLE NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_XGGeoE×XGVerC`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`GeometryEntity` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`Visualization`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`Visualization` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_VVBObj×VVisul`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`VisualizationBaseObject` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InfraDB`.`VisualizationBaseObject`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`VisualizationBaseObject` (
  `id` CHAR(36) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK÷id_BNmRes×VVBObj`
    FOREIGN KEY (`id`)
    REFERENCES `InfraDB`.`NamedResource` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

USE `InfraDB` ;

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_LinearElement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_LinearElement` (`id` INT, `length` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_AssociatedPosition`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_AssociatedPosition` (`id` INT, `id_PositioningNetElement` INT, `intrinsicReference` INT, `deltaPosition` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_BaseObject`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_BaseObject` (`id` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_NamedResource`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_NamedResource` (`id` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_NetworkResource`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_NetworkResource` (`id` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_LevelResourceAssignment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_LevelResourceAssignment` (`id_NetworkResource` INT, `id_LevelNetwork` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_NetworkLevelAssignment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_NetworkLevelAssignment` (`id_LevelNetwork` INT, `id_Network` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_NetworkResourceAssignment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_NetworkResourceAssignment` (`id_NetworkResource` INT, `id_Network` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_Network`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_Network` (`id` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_LevelNetwork`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_LevelNetwork` (`id` INT, `descriptionLevel` INT, `representation` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_NetElement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_NetElement` (`id` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_Relation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_Relation` (`id` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_PositionedRelation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_PositionedRelation` (`id` INT, `id_PositioningNetElement_A` INT, `id_PositioningNetElement_B` INT, `positionOnA` INT, `positionOnB` INT, `navigability` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_CompositionNetElement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_CompositionNetElement` (`id` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_PositioningNetElement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_PositioningNetElement` (`id` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_NonLinearElement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_NonLinearElement` (`id` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_ElementPartCollection`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_ElementPartCollection` (`id` INT, `id_CompositionNetElement` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_UnorderedCollection`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_UnorderedCollection` (`id` INT, `id_CompositionNetElement` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_OrderedCollectionElement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_OrderedCollectionElement` (`id_NetElement` INT, `id_OrderedCollection` INT, `sequence` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_UnorderedCollectionElement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_UnorderedCollectionElement` (`id_NetElement` INT, `id_UnorderedCollection` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_OrderedCollection`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_OrderedCollection` (`id` INT, `id_CompositionNetElement` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_Visualization`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_Visualization` (`id` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_ObjectProjection`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_ObjectProjection` (`id` INT, `id_BaseObject` INT, `id_Visualization` INT, `id_ObjectProjectionSymbol` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_ObjectProjectionSymbol`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_ObjectProjectionSymbol` (`id` INT, `externalIconRef` INT, `orientation` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_VisualizationBaseObject`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_VisualizationBaseObject` (`id` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_ObjectProjectionCoordinate`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_ObjectProjectionCoordinate` (`id_ObjectProjection` INT, `id_ScreenPositioningSystem` INT, `sequence` INT, `x` INT, `y` INT, `z` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_SymbolCoordinate`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_SymbolCoordinate` (`id_ObjectProjectionSymbol` INT, `id_ScreenPositioningSystem` INT, `x` INT, `y` INT, `z` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_ScreenPositioningSystem`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_ScreenPositioningSystem` (`id` INT, `pxX` INT, `pxY` INT, `pxZ` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_GeoPositioningSystem`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_GeoPositioningSystem` (`id` INT, `crsDefinition` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_LinearPositioningSystem`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_LinearPositioningSystem` (`id` INT, `linearReferencingMethod` INT, `startMeasure` INT, `endMeasure` INT, `units` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_PositioningSystem`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_PositioningSystem` (`id` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_LinearAnchorPoint`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_LinearAnchorPoint` (`id` INT, `id_LinearPositioningSystem` INT, `anchorName` INT, `measure` INT, `id_LinearAnchorPoint_Next` INT, `measureToNext` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_GeoPointLinearCoordinate`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_GeoPointLinearCoordinate` (`id_GeoPoint` INT, `id_LinearPositioningSystem` INT, `sequence` INT, `measure` INT, `lateralOffset` INT, `verticalOffset` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_GeoPointGeoCoordinate`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_GeoPointGeoCoordinate` (`id_GeoPoint` INT, `id_GeoPositioningSystem` INT, `sequence` INT, `x` INT, `y` INT, `z` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_GeoLocationFeature`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_GeoLocationFeature` (`id_GeoFeature` INT, `id_GeoLocation` INT, `sequence` INT, `keepsOrientation` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_GeoLocationOrientation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_GeoLocationOrientation` (`id_GeoLocation` INT, `id_PositioningSystem` INT, `azimuthAngle` INT, `elevationAngle` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_AssociatedSection`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_AssociatedSection` (`id` INT, `id_AssociatedPosition_A` INT, `id_AssociatedPosition_B` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_AssociatedFeature`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_AssociatedFeature` (`id` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_AssociatedPositioningSystem`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_AssociatedPositioningSystem` (`id` INT, `id_PositioningNetElement` INT, `id_PositioningSystem` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_AssociatedLocationFeature`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_AssociatedLocationFeature` (`id_AssociatedFeature` INT, `id_AssociatedLocation` INT, `sequence` INT, `keepsOrientation` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_AssociatedLocation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_AssociatedLocation` (`id` INT, `associatedLocationType` INT, `applicationDirection` INT, `lateralSide` INT, `lateralDistance` INT, `verticalSide` INT, `verticalDistance` INT, `entityLocationUsage` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_GeoLocation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_GeoLocation` (`id` INT, `geoLocationType` INT, `entityLocationUsage` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_EntityLocation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_EntityLocation` (`id` INT, `entityLocationUsage` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_NetEntity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_NetEntity` (`id` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_LocatedNetEntity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_LocatedNetEntity` (`id` INT, `id_EntityLocation_Primary` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_GeneralType`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_GeneralType` (`id` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_EntityType`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_EntityType` (`id` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_ModularEntityType`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_ModularEntityType` (`id` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_SignalType`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_SignalType` (`id` INT, `signalCategory` INT, `signalConstructionType` INT, `defaultIndication` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_SignalComponentType`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_SignalComponentType` (`id` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_AssociatedSignalType`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_AssociatedSignalType` (`id` INT, `id_SignalType` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_LabelType`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_LabelType` (`id` INT, `labelMeaning` INT, `units` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_IndicatorType`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_IndicatorType` (`id` INT, `indicatorMeaning` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_LightType`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_LightType` (`id` INT, `lightColour` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_ModularEntity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_ModularEntity` (`id` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_ElectrificationEntity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_ElectrificationEntity` (`id` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_PowerSource`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_PowerSource` (`id` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_ElectrificationArea`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_ElectrificationArea` (`id` INT, `id_PowerSource` INT, `contactLineType` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_TrainProtectionEntity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_TrainProtectionEntity` (`id` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_BaliseGroup`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_BaliseGroup` (`id` INT, `applicationType` INT, `mileageDirection` INT, `coverage` INT, `numberOfBalisesInGroup` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_Balise`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_Balise` (`id` INT, `baliseType` INT, `defaultTelegram` INT, `id_BaliseGroup` INT, `positionInGroup` INT, `duplicate` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_TransmissionLoop`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_TransmissionLoop` (`id` INT, `id_TransmitterBox` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_SignificantLoopPoint`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_SignificantLoopPoint` (`id` INT, `id_TransmissionLoop` INT, `loopPointType` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_TransmitterBox`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_TransmitterBox` (`id` INT, `protectionSystem` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_OperationalEntity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_OperationalEntity` (`id` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_SpeedSection`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_SpeedSection` (`id` INT, `maxSpeed` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_SpeedProfile`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_SpeedProfile` (`id` INT, `speedProfileType` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_StoppingPlace`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_StoppingPlace` (`id` INT, `trainRelation` INT, `wagonCount` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_PlatformEdge`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_PlatformEdge` (`id` INT, `id_Platform` INT, `maximumTrainLength` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_PlatformStoppingPlace`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_PlatformStoppingPlace` (`id` INT, `id_PlatformEdge` INT, `trainRelation` INT, `wagonCount` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_SpeedProfileSectionAssignment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_SpeedProfileSectionAssignment` (`id_SpeedSection` INT, `id_SpeedProfile` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_OperationalArea`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_OperationalArea` (`id` INT, `isStoppingPoint` INT, `isStation` INT, `isDepot` INT, `isJunction` INT, `isInterstationSection` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_TrainDetectionEntity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_TrainDetectionEntity` (`id` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_TrackCircuit`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_TrackCircuit` (`id` INT, `id_OperationalArea` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_ImpedanceTransformer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_ImpedanceTransformer` (`id` INT, `impedanceTransformerType` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_InsulatedRailJoint`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_InsulatedRailJoint` (`id` INT, `id_TrackCircuit_A` INT, `id_TrackCircuit_B` INT, `id_ImpedanceTransformer` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_TrackCircuitLoopAssignment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_TrackCircuitLoopAssignment` (`id_TransmissionLoop` INT, `id_TrackCircuit` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_OperationalAreaSignalAssignment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_OperationalAreaSignalAssignment` (`id_Signal` INT, `id_OperationalArea` INT, `operationalDesignator` INT, `operationalFunction` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_SpeedSectionSignalAssignment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_SpeedSectionSignalAssignment` (`id_Signal` INT, `id_SpeedSection` INT, `signalRole` INT, `trainRelation` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_RouteControlEntityAssignment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_RouteControlEntityAssignment` (`id_ControlEntity` INT, `id_RailwayRoute` INT, `requiredState` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_SwitchMachineRelationAssignment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_SwitchMachineRelationAssignment` (`id_SwitchMachine` INT, `id_PossitionedRelation` INT, `validForState` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_ControlEntity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_ControlEntity` (`id` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_SwitchMachine`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_SwitchMachine` (`id` INT, `id_Turnout` INT, `switchMachineRole` INT, `defaultState` INT, `id_TracksideSignal` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_TracksideSignal`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_TracksideSignal` (`id` INT, `id_SignalType` INT, `referencePointHeight` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_SignalLabelTypeAssignment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_SignalLabelTypeAssignment` (`id_Signal` INT, `id_LabelType` INT, `indicatedValue` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_SignalComponentTypeAssignment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_SignalComponentTypeAssignment` (`id_SignalType` INT, `id_SignalComponentType` INT, `verticalPosition` INT, `horizontalPosition` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_StructuralEntity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_StructuralEntity` (`id` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_TrackBed`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_TrackBed` (`id` INT, `trackBedType` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_Tunnel`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_Tunnel` (`id` INT, `numberOfTracks` INT, `liningMaterial` INT, `crossSectionShape` INT, `horizontalCrossSectionDimension` INT, `height` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_SuperstructureComponent`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_SuperstructureComponent` (`id` INT, `id_OperationalArea` INT, `operationalDesignator` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_Turnout`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_Turnout` (`id` INT, `turnoutType` INT, `technicalDesignator` INT, `id_OperationalArea` INT, `operationalDesignator` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_Crossing`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_Crossing` (`id` INT, `id_OperationalArea` INT, `operationalDesignator` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_Track`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_Track` (`id` INT, `id_OperationalArea` INT, `operationalDesignator` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_Platform`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_Platform` (`id` INT, `id_OperationalArea` INT, `width` INT, `platformType` INT, `operationalDesignator` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_RailwayRoute`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_RailwayRoute` (`id` INT, `railwayRouteType` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_RouteComponentAssignment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_RouteComponentAssignment` (`id_SuperstructureComponent` INT, `id_RailwayRoute` INT, `routeRole` INT, `assignmentType` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_RouteCurveAssignment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_RouteCurveAssignment` (`id_SuperstructureComponent` INT, `id_RailwayRoute` INT, `routeRole` INT, `assignmentType` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_GeometryEntity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_GeometryEntity` (`id` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_HorizontalCurve`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_HorizontalCurve` (`id` INT, `azimuth0` INT, `deltaAzimuth` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_VerticalCurve`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_VerticalCurve` (`id` INT, `horizontalLength` INT, `elevation0` INT, `deltaElevation` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_StraightHC`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_StraightHC` (`id` INT, `horizontalLength` INT, `azimuth0` INT, `deltaAzimuth` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_CircularArcHC`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_CircularArcHC` (`id` INT, `radius` INT, `azimuth0` INT, `deltaAzimuth` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_CubicParabolaHC`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_CubicParabolaHC` (`id` INT, `radius0` INT, `radius1` INT, `azimuth0` INT, `deltaAzimuth` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_ClothoidHC`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_ClothoidHC` (`id` INT, `radius0` INT, `radius1` INT, `azimuth0` INT, `deltaAzimuth` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_StraightVC`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_StraightVC` (`id` INT, `horizontalLength` INT, `elevation0` INT, `deltaElevation` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_ParabolaVC`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_ParabolaVC` (`id` INT, `parabolaVertexRadius` INT, `horizontalLength` INT, `elevation0` INT, `deltaElevation` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_Superelevation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_Superelevation` (`id` INT, `anchoredAxisReference` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_ConstantSuperelevation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_ConstantSuperelevation` (`id` INT, `superelevation` INT, `anchoredAxisReference` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_LinearSuperelevationRamp`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_LinearSuperelevationRamp` (`id` INT, `superelevation` INT, `anchoredAxisReference` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_GeoPoint`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_GeoPoint` (`id` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_GeoFeature`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_GeoFeature` (`id` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_GeoPolygonalChain`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_GeoPolygonalChain` (`id` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_GeoPolygonalChainGeoPoint`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_GeoPolygonalChainGeoPoint` (`id_GeoPolygonalChain` INT, `id_GeoPoint` INT, `sequence` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_GeoFeatureAssociatedFeature`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_GeoFeatureAssociatedFeature` (`id_AssociatedFeature` INT, `id_GeoFeature` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_DerivedNetEntity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_DerivedNetEntity` (`id` INT, `id_NetEntity_Template` INT, `derivationRule` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_LocalizationFeature`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_LocalizationFeature` (`id` INT, `name` INT, `longname` INT);

-- -----------------------------------------------------
-- Placeholder table for view `InfraDB`.`CV_EntityLocationAssignment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InfraDB`.`CV_EntityLocationAssignment` (`id_EntityLocation` INT, `id_LocatedNetEntity` INT);

-- -----------------------------------------------------
-- View `InfraDB`.`CV_LinearElement`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_LinearElement`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_LinearElement` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetElement
NATURAL JOIN CompositionNetElement
NATURAL JOIN PositioningNetElement
NATURAL JOIN LinearElement;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_AssociatedPosition`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_AssociatedPosition`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_AssociatedPosition` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN LocalizationFeature
NATURAL JOIN AssociatedFeature
NATURAL JOIN AssociatedPosition;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_BaseObject`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_BaseObject`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_BaseObject` AS
SELECT * FROM BaseObject;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_NamedResource`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_NamedResource`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_NamedResource` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_NetworkResource`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_NetworkResource`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_NetworkResource` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_LevelResourceAssignment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_LevelResourceAssignment`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_LevelResourceAssignment` AS
SELECT * FROM LevelResourceAssignment;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_NetworkLevelAssignment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_NetworkLevelAssignment`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_NetworkLevelAssignment` AS
SELECT * FROM NetworkLevelAssignment;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_NetworkResourceAssignment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_NetworkResourceAssignment`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_NetworkResourceAssignment` AS
SELECT * FROM NetworkResourceAssignment;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_Network`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_Network`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_Network` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN Network;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_LevelNetwork`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_LevelNetwork`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_LevelNetwork` AS
SELECT * FROM BaseObject
NATURAL JOIN LevelNetwork;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_NetElement`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_NetElement`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_NetElement` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetElement;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_Relation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_Relation`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_Relation` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN Relation;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_PositionedRelation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_PositionedRelation`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_PositionedRelation` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN Relation
NATURAL JOIN PositionedRelation;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_CompositionNetElement`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_CompositionNetElement`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_CompositionNetElement` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetElement
NATURAL JOIN CompositionNetElement;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_PositioningNetElement`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_PositioningNetElement`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_PositioningNetElement` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetElement
NATURAL JOIN CompositionNetElement
NATURAL JOIN PositioningNetElement;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_NonLinearElement`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_NonLinearElement`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_NonLinearElement` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetElement
NATURAL JOIN CompositionNetElement
NATURAL JOIN PositioningNetElement
NATURAL JOIN NonLinearElement;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_ElementPartCollection`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_ElementPartCollection`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_ElementPartCollection` AS
SELECT * FROM BaseObject
NATURAL JOIN ElementPartCollection;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_UnorderedCollection`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_UnorderedCollection`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_UnorderedCollection` AS
SELECT * FROM BaseObject
NATURAL JOIN ElementPartCollection
NATURAL JOIN UnorderedCollection;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_OrderedCollectionElement`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_OrderedCollectionElement`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_OrderedCollectionElement` AS
SELECT * FROM OrderedCollectionElement;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_UnorderedCollectionElement`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_UnorderedCollectionElement`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_UnorderedCollectionElement` AS
SELECT * FROM UnorderedCollectionElement;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_OrderedCollection`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_OrderedCollection`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_OrderedCollection` AS
SELECT * FROM BaseObject
NATURAL JOIN ElementPartCollection
NATURAL JOIN OrderedCollection;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_Visualization`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_Visualization`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_Visualization` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN VisualizationBaseObject
NATURAL JOIN Visualization;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_ObjectProjection`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_ObjectProjection`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_ObjectProjection` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN VisualizationBaseObject
NATURAL JOIN ObjectProjection;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_ObjectProjectionSymbol`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_ObjectProjectionSymbol`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_ObjectProjectionSymbol` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN VisualizationBaseObject
NATURAL JOIN ObjectProjectionSymbol;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_VisualizationBaseObject`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_VisualizationBaseObject`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_VisualizationBaseObject` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN VisualizationBaseObject;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_ObjectProjectionCoordinate`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_ObjectProjectionCoordinate`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_ObjectProjectionCoordinate` AS
SELECT * FROM ObjectProjectionCoordinate;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_SymbolCoordinate`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_SymbolCoordinate`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_SymbolCoordinate` AS
SELECT * FROM SymbolCoordinate;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_ScreenPositioningSystem`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_ScreenPositioningSystem`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_ScreenPositioningSystem` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN PositioningSystem
NATURAL JOIN ScreenPositioningSystem;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_GeoPositioningSystem`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_GeoPositioningSystem`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_GeoPositioningSystem` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN PositioningSystem
NATURAL JOIN GeoPositioningSystem;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_LinearPositioningSystem`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_LinearPositioningSystem`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_LinearPositioningSystem` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN PositioningSystem
NATURAL JOIN LinearPositioningSystem;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_PositioningSystem`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_PositioningSystem`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_PositioningSystem` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN PositioningSystem;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_LinearAnchorPoint`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_LinearAnchorPoint`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_LinearAnchorPoint` AS
SELECT * FROM BaseObject
NATURAL JOIN LinearAnchorPoint;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_GeoPointLinearCoordinate`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_GeoPointLinearCoordinate`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_GeoPointLinearCoordinate` AS
SELECT * FROM GeoPointLinearCoordinate;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_GeoPointGeoCoordinate`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_GeoPointGeoCoordinate`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_GeoPointGeoCoordinate` AS
SELECT * FROM GeoPointGeoCoordinate;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_GeoLocationFeature`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_GeoLocationFeature`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_GeoLocationFeature` AS
SELECT * FROM GeoLocationFeature;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_GeoLocationOrientation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_GeoLocationOrientation`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_GeoLocationOrientation` AS
SELECT * FROM GeoLocationOrientation;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_AssociatedSection`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_AssociatedSection`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_AssociatedSection` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN LocalizationFeature
NATURAL JOIN AssociatedFeature
NATURAL JOIN AssociatedSection;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_AssociatedFeature`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_AssociatedFeature`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_AssociatedFeature` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN LocalizationFeature
NATURAL JOIN AssociatedFeature;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_AssociatedPositioningSystem`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_AssociatedPositioningSystem`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_AssociatedPositioningSystem` AS
SELECT * FROM BaseObject
NATURAL JOIN AssociatedPositioningSystem;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_AssociatedLocationFeature`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_AssociatedLocationFeature`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_AssociatedLocationFeature` AS
SELECT * FROM AssociatedLocationFeature;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_AssociatedLocation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_AssociatedLocation`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_AssociatedLocation` AS
SELECT * FROM BaseObject
NATURAL JOIN EntityLocation
NATURAL JOIN AssociatedLocation;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_GeoLocation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_GeoLocation`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_GeoLocation` AS
SELECT * FROM BaseObject
NATURAL JOIN EntityLocation
NATURAL JOIN GeoLocation;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_EntityLocation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_EntityLocation`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_EntityLocation` AS
SELECT * FROM BaseObject
NATURAL JOIN EntityLocation;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_NetEntity`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_NetEntity`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_NetEntity` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_LocatedNetEntity`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_LocatedNetEntity`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_LocatedNetEntity` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN LocatedNetEntity;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_GeneralType`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_GeneralType`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_GeneralType` AS
SELECT * FROM BaseObject
NATURAL JOIN GeneralType;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_EntityType`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_EntityType`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_EntityType` AS
SELECT * FROM BaseObject
NATURAL JOIN GeneralType
NATURAL JOIN EntityType;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_ModularEntityType`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_ModularEntityType`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_ModularEntityType` AS
SELECT * FROM BaseObject
NATURAL JOIN GeneralType
NATURAL JOIN EntityType
NATURAL JOIN ModularEntityType;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_SignalType`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_SignalType`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_SignalType` AS
SELECT * FROM BaseObject
NATURAL JOIN GeneralType
NATURAL JOIN EntityType
NATURAL JOIN ModularEntityType
NATURAL JOIN SignalType;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_SignalComponentType`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_SignalComponentType`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_SignalComponentType` AS
SELECT * FROM BaseObject
NATURAL JOIN GeneralType
NATURAL JOIN EntityType
NATURAL JOIN ModularEntityType
NATURAL JOIN SignalComponentType;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_AssociatedSignalType`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_AssociatedSignalType`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_AssociatedSignalType` AS
SELECT * FROM BaseObject
NATURAL JOIN GeneralType
NATURAL JOIN EntityType
NATURAL JOIN ModularEntityType
NATURAL JOIN SignalComponentType
NATURAL JOIN AssociatedSignalType;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_LabelType`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_LabelType`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_LabelType` AS
SELECT * FROM BaseObject
NATURAL JOIN GeneralType
NATURAL JOIN EntityType
NATURAL JOIN ModularEntityType
NATURAL JOIN SignalComponentType
NATURAL JOIN LabelType;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_IndicatorType`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_IndicatorType`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_IndicatorType` AS
SELECT * FROM BaseObject
NATURAL JOIN GeneralType
NATURAL JOIN EntityType
NATURAL JOIN ModularEntityType
NATURAL JOIN SignalComponentType
NATURAL JOIN IndicatorType;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_LightType`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_LightType`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_LightType` AS
SELECT * FROM BaseObject
NATURAL JOIN GeneralType
NATURAL JOIN EntityType
NATURAL JOIN ModularEntityType
NATURAL JOIN SignalComponentType
NATURAL JOIN LightType;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_ModularEntity`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_ModularEntity`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_ModularEntity` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN ModularEntity;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_ElectrificationEntity`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_ElectrificationEntity`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_ElectrificationEntity` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN ModularEntity
NATURAL JOIN ElectrificationEntity;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_PowerSource`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_PowerSource`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_PowerSource` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN ModularEntity
NATURAL JOIN ElectrificationEntity
NATURAL JOIN PowerSource;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_ElectrificationArea`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_ElectrificationArea`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_ElectrificationArea` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN ModularEntity
NATURAL JOIN ElectrificationEntity
NATURAL JOIN ElectrificationArea;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_TrainProtectionEntity`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_TrainProtectionEntity`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_TrainProtectionEntity` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN ModularEntity
NATURAL JOIN TrainProtectionEntity;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_BaliseGroup`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_BaliseGroup`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_BaliseGroup` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN ModularEntity
NATURAL JOIN TrainProtectionEntity
NATURAL JOIN BaliseGroup;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_Balise`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_Balise`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_Balise` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN ModularEntity
NATURAL JOIN TrainProtectionEntity
NATURAL JOIN Balise;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_TransmissionLoop`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_TransmissionLoop`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_TransmissionLoop` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN ModularEntity
NATURAL JOIN TrainProtectionEntity
NATURAL JOIN TransmissionLoop;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_SignificantLoopPoint`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_SignificantLoopPoint`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_SignificantLoopPoint` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN ModularEntity
NATURAL JOIN TrainProtectionEntity
NATURAL JOIN SignificantLoopPoint;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_TransmitterBox`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_TransmitterBox`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_TransmitterBox` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN ModularEntity
NATURAL JOIN TrainProtectionEntity
NATURAL JOIN TransmitterBox;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_OperationalEntity`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_OperationalEntity`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_OperationalEntity` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN ModularEntity
NATURAL JOIN OperationalEntity;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_SpeedSection`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_SpeedSection`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_SpeedSection` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN ModularEntity
NATURAL JOIN OperationalEntity
NATURAL JOIN SpeedSection;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_SpeedProfile`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_SpeedProfile`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_SpeedProfile` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN ModularEntity
NATURAL JOIN OperationalEntity
NATURAL JOIN SpeedProfile;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_StoppingPlace`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_StoppingPlace`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_StoppingPlace` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN ModularEntity
NATURAL JOIN OperationalEntity
NATURAL JOIN StoppingPlace;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_PlatformEdge`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_PlatformEdge`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_PlatformEdge` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN ModularEntity
NATURAL JOIN OperationalEntity
NATURAL JOIN PlatformEdge;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_PlatformStoppingPlace`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_PlatformStoppingPlace`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_PlatformStoppingPlace` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN ModularEntity
NATURAL JOIN OperationalEntity
NATURAL JOIN StoppingPlace
NATURAL JOIN PlatformStoppingPlace;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_SpeedProfileSectionAssignment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_SpeedProfileSectionAssignment`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_SpeedProfileSectionAssignment` AS
SELECT * FROM SpeedProfileSectionAssignment;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_OperationalArea`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_OperationalArea`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_OperationalArea` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN ModularEntity
NATURAL JOIN OperationalEntity
NATURAL JOIN OperationalArea;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_TrainDetectionEntity`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_TrainDetectionEntity`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_TrainDetectionEntity` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN ModularEntity
NATURAL JOIN TrainDetectionEntity;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_TrackCircuit`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_TrackCircuit`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_TrackCircuit` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN ModularEntity
NATURAL JOIN TrainDetectionEntity
NATURAL JOIN TrackCircuit;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_ImpedanceTransformer`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_ImpedanceTransformer`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_ImpedanceTransformer` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN ModularEntity
NATURAL JOIN TrainDetectionEntity
NATURAL JOIN ImpedanceTransformer;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_InsulatedRailJoint`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_InsulatedRailJoint`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_InsulatedRailJoint` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN ModularEntity
NATURAL JOIN TrainDetectionEntity
NATURAL JOIN InsulatedRailJoint;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_TrackCircuitLoopAssignment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_TrackCircuitLoopAssignment`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_TrackCircuitLoopAssignment` AS
SELECT * FROM TrackCircuitLoopAssignment;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_OperationalAreaSignalAssignment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_OperationalAreaSignalAssignment`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_OperationalAreaSignalAssignment` AS
SELECT * FROM OperationalAreaSignalAssignment;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_SpeedSectionSignalAssignment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_SpeedSectionSignalAssignment`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_SpeedSectionSignalAssignment` AS
SELECT * FROM SpeedSectionSignalAssignment;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_RouteControlEntityAssignment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_RouteControlEntityAssignment`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_RouteControlEntityAssignment` AS
SELECT * FROM RouteControlEntityAssignment;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_SwitchMachineRelationAssignment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_SwitchMachineRelationAssignment`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_SwitchMachineRelationAssignment` AS
SELECT * FROM SwitchMachineRelationAssignment;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_ControlEntity`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_ControlEntity`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_ControlEntity` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN ModularEntity
NATURAL JOIN ControlEntity;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_SwitchMachine`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_SwitchMachine`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_SwitchMachine` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN ModularEntity
NATURAL JOIN ControlEntity
NATURAL JOIN SwitchMachine;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_TracksideSignal`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_TracksideSignal`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_TracksideSignal` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN ModularEntity
NATURAL JOIN ControlEntity
NATURAL JOIN TracksideSignal;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_SignalLabelTypeAssignment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_SignalLabelTypeAssignment`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_SignalLabelTypeAssignment` AS
SELECT * FROM SignalLabelTypeAssignment;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_SignalComponentTypeAssignment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_SignalComponentTypeAssignment`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_SignalComponentTypeAssignment` AS
SELECT * FROM SignalComponentTypeAssignment;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_StructuralEntity`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_StructuralEntity`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_StructuralEntity` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN ModularEntity
NATURAL JOIN StructuralEntity;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_TrackBed`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_TrackBed`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_TrackBed` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN ModularEntity
NATURAL JOIN StructuralEntity
NATURAL JOIN TrackBed;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_Tunnel`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_Tunnel`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_Tunnel` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN ModularEntity
NATURAL JOIN StructuralEntity
NATURAL JOIN Tunnel;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_SuperstructureComponent`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_SuperstructureComponent`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_SuperstructureComponent` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN ModularEntity
NATURAL JOIN StructuralEntity
NATURAL JOIN SuperstructureComponent;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_Turnout`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_Turnout`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_Turnout` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN ModularEntity
NATURAL JOIN StructuralEntity
NATURAL JOIN SuperstructureComponent
NATURAL JOIN Turnout;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_Crossing`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_Crossing`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_Crossing` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN ModularEntity
NATURAL JOIN StructuralEntity
NATURAL JOIN SuperstructureComponent
NATURAL JOIN Crossing;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_Track`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_Track`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_Track` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN ModularEntity
NATURAL JOIN StructuralEntity
NATURAL JOIN SuperstructureComponent
NATURAL JOIN Track;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_Platform`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_Platform`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_Platform` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN ModularEntity
NATURAL JOIN StructuralEntity
NATURAL JOIN SuperstructureComponent
NATURAL JOIN Platform;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_RailwayRoute`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_RailwayRoute`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_RailwayRoute` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN ModularEntity
NATURAL JOIN OperationalEntity
NATURAL JOIN RailwayRoute;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_RouteComponentAssignment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_RouteComponentAssignment`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_RouteComponentAssignment` AS
SELECT * FROM RouteComponentAssignment;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_RouteCurveAssignment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_RouteCurveAssignment`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_RouteCurveAssignment` AS
SELECT * FROM RouteComponentAssignment;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_GeometryEntity`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_GeometryEntity`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_GeometryEntity` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN GeometryEntity;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_HorizontalCurve`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_HorizontalCurve`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_HorizontalCurve` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN GeometryEntity
NATURAL JOIN HorizontalCurve;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_VerticalCurve`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_VerticalCurve`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_VerticalCurve` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN GeometryEntity
NATURAL JOIN VerticalCurve;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_StraightHC`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_StraightHC`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_StraightHC` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN GeometryEntity
NATURAL JOIN HorizontalCurve
NATURAL JOIN StraightHC;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_CircularArcHC`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_CircularArcHC`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_CircularArcHC` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN GeometryEntity
NATURAL JOIN HorizontalCurve
NATURAL JOIN CircularArcHC;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_CubicParabolaHC`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_CubicParabolaHC`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_CubicParabolaHC` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN GeometryEntity
NATURAL JOIN HorizontalCurve
NATURAL JOIN CubicParabolaHC;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_ClothoidHC`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_ClothoidHC`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_ClothoidHC` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN GeometryEntity
NATURAL JOIN HorizontalCurve
NATURAL JOIN ClothoidHC;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_StraightVC`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_StraightVC`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_StraightVC` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN GeometryEntity
NATURAL JOIN VerticalCurve
NATURAL JOIN StraightVC;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_ParabolaVC`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_ParabolaVC`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_ParabolaVC` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN GeometryEntity
NATURAL JOIN VerticalCurve
NATURAL JOIN ParabolaVC;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_Superelevation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_Superelevation`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_Superelevation` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN GeometryEntity
NATURAL JOIN Superelevation;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_ConstantSuperelevation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_ConstantSuperelevation`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_ConstantSuperelevation` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN GeometryEntity
NATURAL JOIN Superelevation
NATURAL JOIN ConstantSuperelevation;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_LinearSuperelevationRamp`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_LinearSuperelevationRamp`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_LinearSuperelevationRamp` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN GeometryEntity
NATURAL JOIN Superelevation
NATURAL JOIN ConstantSuperelevation;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_GeoPoint`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_GeoPoint`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_GeoPoint` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN LocalizationFeature
NATURAL JOIN GeoFeature
NATURAL JOIN GeoPoint;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_GeoFeature`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_GeoFeature`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_GeoFeature` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN LocalizationFeature
NATURAL JOIN GeoFeature;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_GeoPolygonalChain`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_GeoPolygonalChain`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_GeoPolygonalChain` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN LocalizationFeature
NATURAL JOIN GeoFeature
NATURAL JOIN GeoPolygonalChain;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_GeoPolygonalChainGeoPoint`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_GeoPolygonalChainGeoPoint`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_GeoPolygonalChainGeoPoint` AS
SELECT * FROM GeoPolygonalChainGeoPoint;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_GeoFeatureAssociatedFeature`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_GeoFeatureAssociatedFeature`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_GeoFeatureAssociatedFeature` AS
SELECT * FROM GeoFeatureAssociatedFeature;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_DerivedNetEntity`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_DerivedNetEntity`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_DerivedNetEntity` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN NetworkResource
NATURAL JOIN NetEntity
NATURAL JOIN DerivedNetEntity;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_LocalizationFeature`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_LocalizationFeature`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_LocalizationFeature` AS
SELECT * FROM BaseObject
NATURAL JOIN NamedResource
NATURAL JOIN LocalizationFeature;

-- -----------------------------------------------------
-- View `InfraDB`.`CV_EntityLocationAssignment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `InfraDB`.`CV_EntityLocationAssignment`;
USE `InfraDB`;
CREATE  OR REPLACE VIEW `CV_EntityLocationAssignment` AS
SELECT * FROM EntityLocationAssignment;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
